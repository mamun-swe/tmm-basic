[{"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js":"1","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js":"2","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js":"3","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js":"4","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js":"5","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js":"6","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js":"7","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js":"8","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js":"9","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js":"10","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js":"11","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js":"12","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js":"13","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js":"14","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js":"15","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js":"16","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js":"17","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js":"18","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js":"19","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js":"20","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js":"21"},{"size":160,"mtime":1611984454498,"results":"22","hashOfConfig":"23"},{"size":491,"mtime":1611984454483,"results":"24","hashOfConfig":"23"},{"size":8112,"mtime":1611984454500,"results":"25","hashOfConfig":"23"},{"size":38529,"mtime":1612009927089,"results":"26","hashOfConfig":"23"},{"size":269,"mtime":1611984454501,"results":"27","hashOfConfig":"23"},{"size":113,"mtime":1611984454502,"results":"28","hashOfConfig":"23"},{"size":6497,"mtime":1611984454494,"results":"29","hashOfConfig":"23"},{"size":2418,"mtime":1611984454496,"results":"30","hashOfConfig":"23"},{"size":4199,"mtime":1611984454497,"results":"31","hashOfConfig":"23"},{"size":2436,"mtime":1611984454495,"results":"32","hashOfConfig":"23"},{"size":4536,"mtime":1611984454492,"results":"33","hashOfConfig":"23"},{"size":13166,"mtime":1611984454490,"results":"34","hashOfConfig":"23"},{"size":15237,"mtime":1611984454490,"results":"35","hashOfConfig":"23"},{"size":6979,"mtime":1612009927087,"results":"36","hashOfConfig":"23"},{"size":4632,"mtime":1611984454492,"results":"37","hashOfConfig":"23"},{"size":2421,"mtime":1611984454494,"results":"38","hashOfConfig":"23"},{"size":4539,"mtime":1611984454491,"results":"39","hashOfConfig":"23"},{"size":2455,"mtime":1611984454494,"results":"40","hashOfConfig":"23"},{"size":2450,"mtime":1611984454496,"results":"41","hashOfConfig":"23"},{"size":2485,"mtime":1611984454495,"results":"42","hashOfConfig":"23"},{"size":148,"mtime":1612009927090,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"qcr6mu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js",[],["89","90"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js",["91"],"import React, { createRef, useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport Icon from 'react-icons-kit'\r\nimport { api } from '../../utils/api'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Images } from '../../utils/Images'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { ic_create } from 'react-icons-kit/md'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Index = () => {\r\n    const refs = createRef()\r\n    const windowWidth = window.innerWidth\r\n    const { register, handleSubmit } = useForm()\r\n    const [page, setPage] = useState(0)\r\n    const [isLoading, setLoading] = useState(true)\r\n    const [users, setUsers] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState(users)\r\n\r\n    const fakeArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n    }, [page])\r\n\r\n    // Fetch Users\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/index?_page=${page}&_limit=36`)\r\n            if (response.status === 200) {\r\n                setUsers([...users, ...response.data.users])\r\n                setFilteredUsers([...users, ...response.data.users])\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Submit to filter user\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            // Find from loaded data\r\n            const result = users.filter(x => x.email.toLowerCase().includes(data.query.toLowerCase()))\r\n            if (result && result.length > 0) {\r\n                setFilteredUsers(result)\r\n            } else {\r\n\r\n                // Find from server\r\n                const serverResult = await axios.get(`${api}comments?&email=${data.query}`)\r\n                if (serverResult.status === 200 && serverResult.data) {\r\n                    setFilteredUsers(serverResult.data)\r\n                } else {\r\n                    setFilteredUsers(result)\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // On change filter\r\n    const filterHandle = event => {\r\n        const value = event.target.value\r\n        if (!value) {\r\n            setLoading(true)\r\n            fetchUsers()\r\n        }\r\n    }\r\n\r\n    // is loading from fetch API data\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"users-index\">\r\n                <div className=\"container-fluid py-3 py-lg-4\">\r\n                    <div className=\"row\">\r\n\r\n                        {/* Search */}\r\n                        <div className=\"col-12 search-column\">\r\n                            <div className=\"card border-0\">\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* Users */}\r\n                        <div className=\"col-12 px-2 profile-column\">\r\n\r\n                            {/* User Card */}\r\n                            {fakeArr.map((i) =>\r\n                                <div className=\"card border-0\" key={i}>\r\n                                    <div className=\"card-body text-center\">\r\n                                        <div className=\"photo-container rounded-circle\">\r\n                                            <Skeleton circle={true} animation={true} count={1} width={90} height={90} />\r\n                                        </div>\r\n                                        <div className=\"content-container\" ref={refs}>\r\n                                            <Skeleton className=\"mb-1\" animation={true} count={1} width={refs.innerWidth} height={28} />\r\n                                            <Skeleton animation={true} count={1} width={windowWidth > 576 ? 150 : 80} height={20} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"users-index\">\r\n            <div className=\"container-fluid py-3 py-lg-4\">\r\n                <div className=\"row\">\r\n\r\n                    {/* Search */}\r\n                    <div className=\"col-12 search-column\">\r\n                        <div className=\"text-center\">\r\n                            <h3 className=\"mb-3\">{users.length} Users</h3>\r\n                        </div>\r\n\r\n                        <div className=\"card border-0\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                                        <div className=\"form-group\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"query\"\r\n                                                className=\"form-control shadow-none border-0\"\r\n                                                placeholder=\"Search user by e-mail\"\r\n                                                ref={register()}\r\n                                                onChange={filterHandle}\r\n                                            />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Users */}\r\n                    <div className=\"col-12 px-2 profile-column\">\r\n                        {/* User Card */}\r\n                        <InfiniteScroll\r\n                            dataLength={filteredUsers.length}\r\n                            next={() => setPage(page + 1)}\r\n                            hasMore={true}\r\n                        >\r\n                            {filteredUsers && filteredUsers.length > 0 ?\r\n                                filteredUsers.map((user, i) =>\r\n                                    <div className=\"card border-0\" key={i}>\r\n                                        <div className=\"card-body text-center\">\r\n                                            <div className=\"photo-container rounded-circle\">\r\n                                                <img src={Images.User} className=\"img-fluid\" alt=\"...\" />\r\n                                            </div>\r\n                                            <div className=\"content-container\">\r\n                                                <h6 className=\"text-capitalize\">{user.name ? user.name : null}</h6>\r\n                                                <p>{user.email ? user.email : null}</p>\r\n                                            </div>\r\n                                            <Link\r\n                                                to={`/users/${user.email}/edit`}\r\n                                                type=\"button\"\r\n                                                className=\"btn shadow-none rounded-circle\"\r\n                                            >\r\n                                                <Icon icon={ic_create} size={20} />\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                ) :\r\n\r\n                                <div className=\"text-center four-o-four py-4\">\r\n                                    <img src={Images.NoData} className=\"img-fluid\" alt=\"...\" />\r\n                                    <h5>Not data found !!</h5>\r\n                                </div>\r\n                            }\r\n                        </InfiniteScroll>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js",["92"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js",["93"],"import React, { useState } from 'react'\r\nimport './style.scss'\r\nimport CKEditor from 'ckeditor4-react'\r\nimport { Images } from '../../utils/Images'\r\n\r\nconst ProfilePictureDescription = ({ email }) => {\r\n    const [isImage, setImage] = useState()\r\n    const [isUpload, setUpload] = useState(false)\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [previewURL, setPreviewURL] = useState(null)\r\n    const [description, setDescription] = useState({ value: null, error: null })\r\n\r\n    // Image onChange\r\n    const imageChangeHandeller = async (event) => {\r\n        try {\r\n            setUpload(true)\r\n            // let file = event.target.files[0]\r\n            setPreviewURL(URL.createObjectURL(event.target.files[0]))\r\n            // let formData = new FormData()\r\n            // formData.append('image', file)\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // Submit form\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        // Check description null or not\r\n        if (description.value === null || description.value === \"\") return setDescription({ error: true })\r\n\r\n        const data = {\r\n            email: email,\r\n            description: description.value\r\n        }\r\n\r\n        setLoading(true)\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card my-lg-4\">\r\n                <div className=\"card-body p-4\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                            {/* Profile Picture */}\r\n                            <div className=\"col-12 col-lg-4 text-center py-4 pt-lg-5\">\r\n                                {/* Image Container */}\r\n                                <div className=\"img-container text-center\">\r\n                                    <div className=\"image rounded-circle border\">\r\n                                        {previewURL ?\r\n                                            <img src={previewURL} className=\"img-fluid\" alt=\"...\" />\r\n                                            : isImage ?\r\n                                                <img src={isImage} className=\"img-fluid\" alt=\"...\" />\r\n                                                : <img src={Images.Blank} className=\"img-fluid\" alt=\"...\" />}\r\n                                        <div className=\"overlay\">\r\n                                            <div className=\"flex-center flex-column\">\r\n                                                <input type=\"file\" className=\"upload\" onChange={imageChangeHandeller} />\r\n                                                {isUpload ?\r\n                                                    <p className=\"mb-0\">Uploading...</p>\r\n                                                    : <p className=\"mb-0\">Change <br /> Picture</p>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Short Description */}\r\n                            <div className=\"col-12 col-lg-8\">\r\n                                {description.error ? <p className=\"text-danger\">Short description is required.</p> : <p>Short description.</p>}\r\n                                <CKEditor\r\n                                    data={description.value ? description.value : \"Write about of you\"}\r\n                                    onReady={editor => editor}\r\n                                    onChange={evt => setDescription({ value: evt.editor.getData(), error: null })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Submit button */}\r\n                        <div className=\"text-right pt-3\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn shadow-none\"\r\n                                disabled={isLoading}\r\n                            >\r\n                                {isLoading ? <span>Adding...</span> : <span>Add Description</span>}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePictureDescription;","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":26,"column":8,"nodeType":"100","endLine":26,"endColumn":14,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":31,"column":22,"nodeType":"104","messageId":"105","endLine":31,"endColumn":31},{"ruleId":"102","severity":1,"message":"106","line":7,"column":21,"nodeType":"104","messageId":"105","endLine":7,"endColumn":29},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'setUpdate' is assigned a value but never used.","Identifier","unusedVar","'setImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [fetchUsers, page]",{"range":"112","text":"113"},[940,946],"[fetchUsers, page]"]