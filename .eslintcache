[{"/media/mamun/Tools/MERN/CB/TMM/basic/src/index.js":"1","/media/mamun/Tools/MERN/CB/TMM/basic/src/App.js":"2","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/scrollToTop/Index.js":"3","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/fourOfour/Index.js":"4","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/auth/Login.js":"5","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/privateRoute/Index.js":"6","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/master/Index.js":"7","/media/mamun/Tools/MERN/CB/TMM/basic/src/utils/Images.js":"8","/media/mamun/Tools/MERN/CB/TMM/basic/src/utils/api.js":"9","/media/mamun/Tools/MERN/CB/TMM/basic/src/utils/Authenticate.js":"10","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/users/Create.js":"11","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/users/Index.js":"12","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/users/Edit.js":"13","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Branch.js":"14","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Religion.js":"15","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/SocialOrder.js":"16","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Country.js":"17","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Language.js":"18","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/errorModal/Index.js":"19","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/PrimaryInfo.js":"20","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/ProfilePictureDescription.js":"21","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/BasicAndLifestyle.js":"22","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/ContactInformation.js":"23","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/Hobbi.js":"24","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/Interests.js":"25","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteMusic.js":"26","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteRead.js":"27","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/PrefferedMovies.js":"28","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteSports.js":"29","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteCuisine.js":"30","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/PartnerPreference.js":"31","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/ghostLoader/Index.js":"32","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/ProfessionArea.js":"33","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/WorkingWith.js":"34","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Qualification.js":"35","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Cuisine.js":"36","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Sport.js":"37","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Movie.js":"38","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Read.js":"39","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Music.js":"40","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Interest.js":"41","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Hobbi.js":"42"},{"size":152,"mtime":1613451548852,"results":"43","hashOfConfig":"44"},{"size":839,"mtime":1613451548796,"results":"45","hashOfConfig":"44"},{"size":433,"mtime":1613451548851,"results":"46","hashOfConfig":"44"},{"size":693,"mtime":1613451548863,"results":"47","hashOfConfig":"44"},{"size":6106,"mtime":1613451548861,"results":"48","hashOfConfig":"44"},{"size":719,"mtime":1613451548850,"results":"49","hashOfConfig":"44"},{"size":670,"mtime":1613451548855,"results":"50","hashOfConfig":"44"},{"size":321,"mtime":1613451548864,"results":"51","hashOfConfig":"44"},{"size":188,"mtime":1613456075143,"results":"52","hashOfConfig":"44"},{"size":323,"mtime":1613451548864,"results":"53","hashOfConfig":"44"},{"size":45146,"mtime":1613457355405,"results":"54","hashOfConfig":"44"},{"size":10299,"mtime":1613451548859,"results":"55","hashOfConfig":"44"},{"size":9459,"mtime":1613451548858,"results":"56","hashOfConfig":"44"},{"size":6334,"mtime":1613451548837,"results":"57","hashOfConfig":"44"},{"size":2351,"mtime":1613451548844,"results":"58","hashOfConfig":"44"},{"size":4087,"mtime":1613451548845,"results":"59","hashOfConfig":"44"},{"size":2354,"mtime":1613451548838,"results":"60","hashOfConfig":"44"},{"size":2369,"mtime":1613451548840,"results":"61","hashOfConfig":"44"},{"size":1194,"mtime":1613451548812,"results":"62","hashOfConfig":"44"},{"size":34942,"mtime":1613457381170,"results":"63","hashOfConfig":"44"},{"size":6198,"mtime":1613451548830,"results":"64","hashOfConfig":"44"},{"size":16585,"mtime":1613451548817,"results":"65","hashOfConfig":"44"},{"size":12902,"mtime":1613451548821,"results":"66","hashOfConfig":"44"},{"size":6187,"mtime":1613451548825,"results":"67","hashOfConfig":"44"},{"size":6430,"mtime":1613451548826,"results":"68","hashOfConfig":"44"},{"size":6236,"mtime":1613451548823,"results":"69","hashOfConfig":"44"},{"size":6177,"mtime":1613451548823,"results":"70","hashOfConfig":"44"},{"size":6219,"mtime":1613451548828,"results":"71","hashOfConfig":"44"},{"size":6118,"mtime":1613451548824,"results":"72","hashOfConfig":"44"},{"size":6228,"mtime":1613451548822,"results":"73","hashOfConfig":"44"},{"size":37672,"mtime":1613451548828,"results":"74","hashOfConfig":"44"},{"size":4538,"mtime":1613451548832,"results":"75","hashOfConfig":"44"},{"size":2393,"mtime":1613451548842,"results":"76","hashOfConfig":"44"},{"size":2369,"mtime":1613451548846,"results":"77","hashOfConfig":"44"},{"size":2385,"mtime":1613451548843,"results":"78","hashOfConfig":"44"},{"size":2385,"mtime":1613451548839,"results":"79","hashOfConfig":"44"},{"size":2365,"mtime":1613451548846,"results":"80","hashOfConfig":"44"},{"size":2366,"mtime":1613451548841,"results":"81","hashOfConfig":"44"},{"size":2360,"mtime":1613451548844,"results":"82","hashOfConfig":"44"},{"size":2383,"mtime":1613451548842,"results":"83","hashOfConfig":"44"},{"size":2418,"mtime":1613451548840,"results":"84","hashOfConfig":"44"},{"size":2388,"mtime":1613451548839,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"jg72d1",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/media/mamun/Tools/MERN/CB/TMM/basic/src/index.js",[],["180","181"],"/media/mamun/Tools/MERN/CB/TMM/basic/src/App.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/scrollToTop/Index.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/fourOfour/Index.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/auth/Login.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/privateRoute/Index.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/master/Index.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/utils/Images.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/utils/api.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/utils/Authenticate.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/users/Create.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/users/Index.js",["182"],"import React, { createRef, useEffect, useState, useCallback } from \"react\";\nimport \"./style.scss\";\nimport axios from \"axios\";\nimport Icon from \"react-icons-kit\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { api } from \"../../../utils/api\";\nimport { Images } from \"../../../utils/Images\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { loadC } from 'react-icons-kit/ionicons';\nimport { ic_create, ic_lock, ic_add } from \"react-icons-kit/md\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport ErrorModal from '../../../components/errorModal/Index'\n\nconst Index = () => {\n    const refs = createRef();\n    const history = useHistory()\n    const windowWidth = window.innerWidth;\n    const { register, handleSubmit } = useForm();\n    const [page, setPage] = useState(0);\n    const [isLoading, setLoading] = useState(true);\n    const [users, setUsers] = useState([]);\n    const [isLoggingOut, setLoggingOut] = useState(false)\n    const [filteredUsers, setFilteredUsers] = useState(users);\n    const fakeArr = [...Array(30).keys()]\n    const [isError, setError] = useState({ value: null, status: false })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n    })\n\n    // Fetch Users\n    const fetchUsers = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/user/index?_page=${page}&_limit=36`, header)\n            if (response.status === 200) {\n                setUsers([\n                    ...users,\n                    ...response.data.users\n                ]);\n                setFilteredUsers([\n                    ...users,\n                    ...response.data.users\n                ]);\n                setLoading(false)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                setError({ value: error.response, status: true })\n            }\n        }\n    }, [page, header])\n\n    useEffect(() => {\n        fetchUsers()\n    }, [page, header, fetchUsers])\n\n    // Submit to filter user\n    const onSubmit = async (data) => {\n        try {\n            // Find from loaded data\n            const result = users.filter((x) => x.email.toLowerCase().includes(data.query.toLowerCase()));\n            if (result && result.length > 0) {\n                setFilteredUsers(result);\n            } else {\n                // Find from server\n                const serverResult = await axios.get(`${api}admin/user/search?query=${data.query}`, header);\n                if (serverResult.status === 200 && serverResult.data) {\n                    setFilteredUsers(serverResult.data);\n                } else {\n                    setFilteredUsers(result);\n                }\n            }\n        } catch (error) {\n            if (error) {\n                // handleError(error);\n            }\n        }\n    };\n\n    // On change filter\n    const filterHandle = (event) => {\n        const value = event.target.value;\n        if (!value) {\n            setLoading(true);\n            fetchUsers();\n        }\n    };\n\n    // Logout\n    const doLogout = async () => {\n        try {\n            setLoggingOut(true)\n            const response = await axios.get(`${api}admin/auth/logout`, header)\n            if (response.status === 200) {\n                localStorage.clear()\n                setTimeout(() => {\n                    history.push('/')\n                }, 2000)\n            }\n        } catch (error) {\n            if (error) {\n                localStorage.clear()\n                setTimeout(() => {\n                    history.push('/')\n                }, 2000)\n            }\n        }\n    }\n\n    // is loading from fetch API data\n    if (isLoading) {\n        return (<div className=\"users-index\">\n            <div className=\"container-fluid py-3 py-lg-4\">\n                <div className=\"row\"> {/* Search */}\n                    <div className=\"col-12 search-column\">\n                        <div className=\"card border-0\"></div>\n                    </div>\n\n                    {/* Users */}\n                    <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\n                        {fakeArr.map((i) => (\n                            <div className=\"card border-0\" key={i}>\n                                <div className=\"card-body text-center\">\n                                    <div className=\"photo-container rounded-circle\">\n                                        <Skeleton circle={true}\n                                            animation={true}\n                                            count={1}\n                                            width={90}\n                                            height={90} />\n                                    </div>\n                                    <div className=\"content-container\"\n                                        ref={refs}>\n                                        <Skeleton className=\"mb-1\"\n                                            animation={true}\n                                            count={1}\n                                            width={refs.innerWidth}\n                                            height={28} />\n                                        <Skeleton animation={true}\n                                            count={1}\n                                            width={windowWidth > 576 ? 150 : 80}\n                                            height={20} />\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>);\n    }\n\n    // Showing Error\n    if (isError.status) {\n        return (<ErrorModal message={isError.value} header={header} />)\n    }\n\n    return (<div className=\"users-index\">\n        <div className=\"container-fluid py-3 py-lg-4\">\n            <div className=\"row\"> {/* Search */}\n                <div className=\"col-12 search-column\">\n                    <div className=\"text-center\">\n                        <h3 className=\"mb-3\">{users.length}Users</h3>\n                    </div>\n\n                    <div className=\"card border-0\">\n                        <div className=\"d-flex\">\n                            <div className=\"flex-fill\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"query\"\n                                            className=\"form-control shadow-none border-0\"\n                                            placeholder=\"Search user by e-mail\"\n                                            ref={register()}\n                                            onChange={filterHandle}\n                                        />\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Users */}\n                <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\n                    <InfiniteScroll\n                        dataLength={filteredUsers.length}\n                        next={() => setPage(page + 1)}\n                        hasMore={true}\n                    >\n                        {filteredUsers && filteredUsers.length > 0 ?\n                            (filteredUsers.map((user, i) => (\n                                <div className=\"card border-0\" key={i}>\n                                    <div className=\"card-body text-center\">\n                                        <div className=\"photo-container rounded-circle\">\n                                            <img\n                                                src={user.profilePicture.clearImage ? user.profilePicture.clearImage : Images.Blank}\n                                                className=\"img-fluid\"\n                                                alt=\"...\"\n                                            />\n                                        </div>\n                                        <div className=\"content-container\">\n                                            <h6 className=\"text-capitalize\">{user.name ? user.name : null}</h6>\n                                            <p> {user.email ? user.email : null}</p>\n                                        </div>\n                                        <Link to={`/dashboard/user/${user.email}`}\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\">\n                                            <Icon icon={ic_create} size={20} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            ))\n                            ) : (\n                                <div className=\"text-center four-o-four py-4\">\n                                    <img\n                                        src={Images.NoData}\n                                        className=\"img-fluid\"\n                                        alt=\"...\"\n                                    />\n                                    <h5>Not data found !!</h5>\n                                </div>)\n                        } </InfiniteScroll>\n                </div>\n            </div>\n        </div>\n\n        {/* Float add button */}\n        <Link\n            to=\"/dashboard/create\"\n            type=\"button\"\n            className=\"btn float-add-btn shadow-lg rounded-circle\"\n        ><Icon icon={ic_add} size={22} /></Link>\n\n        {/* Float logout button */}\n        {isLoggingOut ? <Icon icon={loadC} className=\"spin\" size={40} /> :\n            <button\n                type=\"button\"\n                className=\"btn float-logout-btn shadow-lg rounded-circle\"\n                onClick={doLogout}\n            >\n                <Icon icon={ic_lock} size={20} />\n            </button>\n        }\n    </div>);\n};\n\nexport default Index;\n","/media/mamun/Tools/MERN/CB/TMM/basic/src/pages/admin/users/Edit.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Branch.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Religion.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/SocialOrder.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Country.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Language.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/errorModal/Index.js",["183"],"import React, { useEffect } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { useHistory } from 'react-router-dom'\n\nconst Index = ({ message, header }) => {\n    const history = useHistory()\n\n    useEffect(() => {\n        const doLogout = async () => {\n            try {\n                const response = await axios.get(`${api}admin/auth/logout`, header)\n                if (response.status === 200) {\n                    localStorage.clear()\n                    history.push('/')\n                }\n            } catch (error) {\n                if (error) {\n                    localStorage.clear()\n                    history.push('/')\n                }\n            }\n        }\n\n        setTimeout(() => {\n            doLogout()\n        }, 2000);\n    }, [header])\n\n    return (\n        <div className=\"error-modal-container\">\n            <div className=\"flex-center flex-column\">\n                <div className=\"card border-0 shadow\">\n                    <h6>{message.data.message}</h6>\n                    <h4 className=\"mb-0\">Logging out...</h4>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Index;","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/PrimaryInfo.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/ProfilePictureDescription.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/BasicAndLifestyle.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/ContactInformation.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/Hobbi.js",["184"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport Icon from 'react-icons-kit'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport { Form } from 'react-bootstrap'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\nimport HobbiCreateModal from '../modal/Hobbi'\n\ntoast.configure({ autoClose: 2000 })\nconst PersonalActivities = ({ email, activities, header }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [hobbies, setHobbies] = useState([])\n\n    // Input states\n    const [selectedHobbies, setSelectedHobbies] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Hobbi create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    // Fetch Hobbi\n    const fetchHobbi = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setHobbies(response.data.activities.hobbies)\n            }\n        } catch (error) {\n            if (error) {\n                if (error) {\n                    toast.error(`${error.response.data.message}`, {\n                        position: \"bottom-right\",\n                        autoClose: false,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    })\n                }\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        fetchHobbi()\n        setSelectedHobbies(activities.hobbies)\n    }, [header, fetchHobbi])\n\n    // Create Hobbi\n    const createHobbi = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/hobbi`, data, header)\n            if (response.status === 201) {\n                fetchHobbi()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedHobbi = hobbi => {\n        if (activities) {\n            const activity = activities.hobbies.find(data => data === hobbi)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedHobbies([...selectedHobbies, item.value])\n        } else {\n            const findItem = selectedHobbies.filter(e => e !== item.value)\n            setSelectedHobbies([])\n            setSelectedHobbies(findItem)\n        }\n    }\n\n    // Add hobbi\n    const addHobbi = async () => {\n        try {\n            if (!selectedHobbies.length) return setEmpty(true)\n            const data = { email: email, hobbies: selectedHobbies }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=hobbies`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div>\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Please select hobbies</span> : <span>Hobbies</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {hobbies && hobbies.map((hobbie, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={i}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={hobbie}\n                                    value={hobbie}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedHobbi(hobbie)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {hobbies && hobbies.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addHobbi} disabled={isLoading}>\n                                {isLoading ? 'Adding...' : 'Add Hobbies'}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Hobbi Create */}\n            {show ?\n                <HobbiCreateModal\n                    show={show}\n                    newdata={createHobbi}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default PersonalActivities;\n\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/Interests.js",["185"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport Icon from 'react-icons-kit'\nimport { ic_add } from 'react-icons-kit/md'\nimport { Form } from 'react-bootstrap'\nimport 'react-toastify/dist/ReactToastify.css'\nimport InterestCreateModal from '../modal/Interest'\n\ntoast.configure({ autoClose: 2000 })\nconst Interests = ({ email, header, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [interests, setInterests] = useState([])\n\n    // Input states\n    const [selectedInterests, setSelectedInterests] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Interest create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n\n    // Fetch interests\n    const fetchInterests = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setInterests(response.data.activities.interests)\n            }\n        } catch (error) {\n            if (error) {\n                if (error) {\n                    toast.error(`${error.response.data.message}`, {\n                        position: \"bottom-right\",\n                        autoClose: false,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    })\n                }\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        fetchInterests()\n        setSelectedInterests(activities.interests)\n    }, [header, fetchInterests])\n\n    // Create Interest\n    const createInterests = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/interest`, data, header)\n            if (response.status === 201) {\n                fetchInterests()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedInterested = interest => {\n        if (activities) {\n            const activity = activities.interests.find(data => data === interest)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedInterests([...selectedInterests, item.value])\n            setEmpty(false)\n        } else {\n            const findItem = selectedInterests.filter(e => e !== item.value)\n            setSelectedInterests([])\n            setSelectedInterests(findItem)\n        }\n    }\n\n\n    // Check states\n    const addInterest = async () => {\n        try {\n            if (!selectedInterests.length) return setEmpty(true)\n            const data = { email: email, interests: selectedInterests }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=interests`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div>\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Please select Interests</span> : <span>Interests</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {interests && interests.map((interest, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={interest}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={interest}\n                                    value={interest}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedInterested(interest)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {interests && interests.length ?\n                        <div className=\"col-12 text-right\">\n                            <button\n                                type=\"button\"\n                                className=\"btn shadow-none\"\n                                onClick={addInterest}\n                                disabled={isLoading}\n                            >{isLoading ? 'Adding...' : 'Add Interest'}</button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Interest Create */}\n            {show ?\n                <InterestCreateModal\n                    show={show}\n                    newdata={createInterests}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default Interests;\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteMusic.js",["186"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport MusicCreateModal from '../modal/Music'\n\ntoast.configure({ autoClose: 2000 })\nconst FavouriteMusic = ({ email, header, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [musics, setMusics] = useState([])\n\n    // Input states\n    const [selectedMusics, setSelectedMusics] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Interest create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    // Fetch mesics\n    const fetchMusics = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setMusics(response.data.activities.musics)\n            }\n        } catch (error) {\n            if (error) {\n                if (error) {\n                    toast.error(`${error.response.data.message}`, {\n                        position: \"bottom-right\",\n                        autoClose: false,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    })\n                }\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        fetchMusics()\n        setSelectedMusics(activities.favouriteMusic)\n    }, [header, fetchMusics])\n\n\n    // Create Music\n    const createMusic = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/music`, data, header)\n            if (response.status === 201) {\n                fetchMusics()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedMusics = music => {\n        if (activities) {\n            const activity = activities.favouriteMusic.find(data => data === music)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedMusics([...selectedMusics, item.value])\n            setEmpty(false)\n        } else {\n            const findItem = selectedMusics.filter(e => e !== item.value)\n            setSelectedMusics([])\n            setSelectedMusics(findItem)\n        }\n    }\n\n\n\n    // Add music\n    const addMusic = async () => {\n        try {\n            if (!selectedMusics.length) return setEmpty(true)\n            const data = { email: email, favouriteMusic: selectedMusics }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=favouriteMusic`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div >\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Select music first</span> : <span>Favourite Music</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {musics && musics.map((music, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={music}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={music}\n                                    value={music}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedMusics(music)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {musics && musics.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addMusic} disabled={isLoading}>\n                                {isLoading ? 'Adding...' : 'Add Music'}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Interest Create */}\n            {show ?\n                <MusicCreateModal\n                    show={show}\n                    newdata={createMusic}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default FavouriteMusic;\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteRead.js",["187"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport ReadCreateModal from '../modal/Read'\n\ntoast.configure({ autoClose: 2000 })\nconst FavouriteRead = ({ email, header, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [reads, setReads] = useState([])\n\n    // Input states\n    const [selectedReads, setSelectedReads] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Interest create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    // Fetch reads\n    const getReads = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setReads(response.data.activities.reads)\n            }\n        } catch (error) {\n            if (error) {\n                if (error) {\n                    toast.error(`${error.response.data.message}`, {\n                        position: \"bottom-right\",\n                        autoClose: false,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    })\n                }\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        getReads()\n        setSelectedReads(activities.favouriteReads)\n    }, [header, getReads])\n\n\n    // Create Read\n    const createRead = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/read`, data, header)\n            if (response.status === 201) {\n                getReads()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedReads = read => {\n        if (activities) {\n            const activity = activities.favouriteReads.find(data => data === read)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedReads([...selectedReads, item.value])\n            setEmpty(false)\n        } else {\n            const findItem = selectedReads.filter(e => e !== item.value)\n            setSelectedReads([])\n            setSelectedReads(findItem)\n        }\n    }\n\n\n\n    // Add read\n    const addRead = async () => {\n        try {\n            if (!selectedReads.length) return setEmpty(true)\n            const data = { email: email, favouriteReads: selectedReads }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=favouriteReads`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div >\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Select first</span> : <span>Favourite Reads</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {reads && reads.map((read, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={read}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={read}\n                                    value={read}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedReads(read)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {reads && reads.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addRead} disabled={isLoading}>\n                                {isLoading ? 'Adding...' : 'Add Read'}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Interest Create */}\n            {show ?\n                <ReadCreateModal\n                    show={show}\n                    newdata={createRead}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default FavouriteRead;\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/PrefferedMovies.js",["188"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport MovieCreateModal from '../modal/Movie'\n\ntoast.configure({ autoClose: 2000 })\nconst PrefferedMovies = ({ email, header, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [movies, setMovies] = useState([])\n\n    // Input states\n    const [selectedMovies, setSelectedMovies] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Interest create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    // get movies\n    const getMovies = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setMovies(response.data.activities.movies)\n            }\n        } catch (error) {\n            if (error) {\n                if (error) {\n                    toast.error(`${error.response.data.message}`, {\n                        position: \"bottom-right\",\n                        autoClose: false,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    })\n                }\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        getMovies()\n        setSelectedMovies(activities.preferredMovies)\n    }, [header, getMovies])\n\n\n    // Create Movie\n    const createMovie = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/movie`, data, header)\n            if (response.status === 201) {\n                getMovies()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedMovies = read => {\n        if (activities) {\n            const activity = activities.preferredMovies.find(data => data === read)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedMovies([...selectedMovies, item.value])\n            setEmpty(false)\n        } else {\n            const findItem = selectedMovies.filter(e => e !== item.value)\n            setSelectedMovies([])\n            setSelectedMovies(findItem)\n        }\n    }\n\n    // Add movie\n    const addMovie = async () => {\n        try {\n            if (!selectedMovies.length) return setEmpty(true)\n            const data = { email: email, preferredMovies: selectedMovies }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=preferredMovies`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div >\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Select first</span> : <span>Preffered Movies</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {movies && movies.map((read, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={read}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={read}\n                                    value={read}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedMovies(read)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {movies && movies.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addMovie} disabled={isLoading}>\n                                {isLoading ? 'Adding...' : 'Add Movies'}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Interest Create */}\n            {show ?\n                <MovieCreateModal\n                    show={show}\n                    newdata={createMovie}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default PrefferedMovies;\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteSports.js",["189"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport SportCreateModal from '../modal/Sport'\n\ntoast.configure({ autoClose: 2000 })\nconst FavouriteSports = ({ email, header, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [sports, setSports] = useState([])\n\n    // Input states\n    const [selectedSports, setSelectedSports] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Interest create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    // get sports\n    const getSports = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setSports(response.data.activities.sports)\n            }\n        } catch (error) {\n            if (error) {\n                toast.error(`${error.response.data.message}`, {\n                    position: \"bottom-right\",\n                    autoClose: false,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                })\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        getSports()\n        setSelectedSports(activities.sports)\n    }, [header, getSports])\n\n\n    // Create Sport\n    const createSport = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/sport`, data, header)\n            if (response.status === 201) {\n                getSports()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedSports = read => {\n        if (activities) {\n            const activity = activities.sports.find(data => data === read)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedSports([...selectedSports, item.value])\n            setEmpty(false)\n        } else {\n            const findItem = selectedSports.filter(e => e !== item.value)\n            setSelectedSports([])\n            setSelectedSports(findItem)\n        }\n    }\n\n    // Add sport\n    const addFavouriteSport = async () => {\n        try {\n            if (!selectedSports.length) return setEmpty(true)\n            const data = { email: email, sports: selectedSports }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=sports`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div >\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Select first</span> : <span>Favourite sports</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {sports && sports.map((read, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={read}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={read}\n                                    value={read}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedSports(read)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {sports && sports.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addFavouriteSport} disabled={isLoading}>\n                                {isLoading ? 'Adding...' : 'Add sports'}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Interest Create */}\n            {show ?\n                <SportCreateModal\n                    show={show}\n                    newdata={createSport}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default FavouriteSports;\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/FavouriteCuisine.js",["190"],"import React, { useEffect, useState, useCallback } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport CuisineCreateModal from '../modal/Cuisine'\n\ntoast.configure({ autoClose: 2000 })\nconst FavouriteCuisine = ({ email, header, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [cuisines, setCuisine] = useState([])\n\n    // Input states\n    const [selectedCuisine, setSelectedCuisine] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Interest create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    // get cuisine\n    const getCuisine = useCallback(async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`, header)\n            if (response.status === 200) {\n                setCuisine(response.data.activities.cuisines)\n            }\n        } catch (error) {\n            if (error) {\n                toast.error(`${error.response.data.message}`, {\n                    position: \"bottom-right\",\n                    autoClose: false,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                })\n            }\n        }\n    }, [header])\n\n    useEffect(() => {\n        getCuisine()\n        setSelectedCuisine(activities.favouriteCuisine)\n    }, [header, getCuisine])\n\n\n    // Create Cuisine\n    const createCuisine = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/cuisine`, data, header)\n            if (response.status === 201) {\n                getCuisine()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedCuisines = cuisine => {\n        if (activities) {\n            const activity = activities.favouriteCuisine.find(data => data === cuisine)\n            if (activity)\n                return activity\n            return false\n        }\n    }\n\n    // Handle checkbox with toggle\n    const toggleCheckbox = event => {\n        const item = event.target\n\n        if (item.checked === true) {\n            setSelectedCuisine([...selectedCuisine, item.value])\n            setEmpty(false)\n        } else {\n            const findItem = selectedCuisine.filter(e => e !== item.value)\n            setSelectedCuisine([])\n            setSelectedCuisine(findItem)\n        }\n    }\n\n    // Add cuisine\n    const addCuisine = async () => {\n        try {\n            if (!selectedCuisine.length) return setEmpty(true)\n            const data = { email: email, favouriteCuisine: selectedCuisine }\n\n            setLoading(true)\n            const response = await axios.put(`${api}admin/user/profile/activity?field=favouriteCuisine`, data, header)\n            if (response.status === 201) {\n                setLoading(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div >\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Select first</span> : <span>Favourite cuisine</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {cuisines && cuisines.map((cuisine, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3 col-lg-2\" key={i}>\n                            <Form.Group controlId={cuisine}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={cuisine}\n                                    value={cuisine}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedCuisines(cuisine)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {cuisines && cuisines.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addCuisine} disabled={isLoading}>\n                                {isLoading ? 'Adding...' : 'Add cuisines'}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Interest Create */}\n            {show ?\n                <CuisineCreateModal\n                    show={show}\n                    newdata={createCuisine}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default FavouriteCuisine;\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/media/mamun/Tools/MERN/CB/TMM/basic/src/components/forms/PartnerPreference.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/ghostLoader/Index.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/ProfessionArea.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/WorkingWith.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Qualification.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Cuisine.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Sport.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Movie.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Read.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Music.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Interest.js",[],"/media/mamun/Tools/MERN/CB/TMM/basic/src/components/modal/Hobbi.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":53,"column":8,"nodeType":"197","endLine":53,"endColumn":22,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":29,"column":8,"nodeType":"197","endLine":29,"endColumn":16,"suggestions":"200"},{"ruleId":"195","severity":1,"message":"201","line":52,"column":8,"nodeType":"197","endLine":52,"endColumn":28,"suggestions":"202"},{"ruleId":"195","severity":1,"message":"203","line":53,"column":8,"nodeType":"197","endLine":53,"endColumn":32,"suggestions":"204"},{"ruleId":"195","severity":1,"message":"205","line":53,"column":8,"nodeType":"197","endLine":53,"endColumn":29,"suggestions":"206"},{"ruleId":"195","severity":1,"message":"207","line":53,"column":8,"nodeType":"197","endLine":53,"endColumn":26,"suggestions":"208"},{"ruleId":"195","severity":1,"message":"209","line":53,"column":8,"nodeType":"197","endLine":53,"endColumn":27,"suggestions":"210"},{"ruleId":"195","severity":1,"message":"211","line":51,"column":8,"nodeType":"197","endLine":51,"endColumn":27,"suggestions":"212"},{"ruleId":"195","severity":1,"message":"213","line":51,"column":8,"nodeType":"197","endLine":51,"endColumn":28,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'users'. Either include it or remove the dependency array. You can also do a functional update 'setUsers(u => ...)' if you only need 'users' in the 'setUsers' call.","ArrayExpression",["217"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'activities.hobbies'. Either include it or remove the dependency array. If 'setSelectedHobbies' needs the current value of 'activities.hobbies', you can also switch to useReducer instead of useState and read 'activities.hobbies' in the reducer.",["219"],"React Hook useEffect has a missing dependency: 'activities.interests'. Either include it or remove the dependency array. If 'setSelectedInterests' needs the current value of 'activities.interests', you can also switch to useReducer instead of useState and read 'activities.interests' in the reducer.",["220"],"React Hook useEffect has a missing dependency: 'activities.favouriteMusic'. Either include it or remove the dependency array. If 'setSelectedMusics' needs the current value of 'activities.favouriteMusic', you can also switch to useReducer instead of useState and read 'activities.favouriteMusic' in the reducer.",["221"],"React Hook useEffect has a missing dependency: 'activities.favouriteReads'. Either include it or remove the dependency array. If 'setSelectedReads' needs the current value of 'activities.favouriteReads', you can also switch to useReducer instead of useState and read 'activities.favouriteReads' in the reducer.",["222"],"React Hook useEffect has a missing dependency: 'activities.preferredMovies'. Either include it or remove the dependency array. If 'setSelectedMovies' needs the current value of 'activities.preferredMovies', you can also switch to useReducer instead of useState and read 'activities.preferredMovies' in the reducer.",["223"],"React Hook useEffect has a missing dependency: 'activities.sports'. Either include it or remove the dependency array. If 'setSelectedSports' needs the current value of 'activities.sports', you can also switch to useReducer instead of useState and read 'activities.sports' in the reducer.",["224"],"React Hook useEffect has a missing dependency: 'activities.favouriteCuisine'. Either include it or remove the dependency array. If 'setSelectedCuisine' needs the current value of 'activities.favouriteCuisine', you can also switch to useReducer instead of useState and read 'activities.favouriteCuisine' in the reducer.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [page, header, users]",{"range":"244","text":"245"},"Update the dependencies array to be: [header, history]",{"range":"246","text":"247"},"Update the dependencies array to be: [header, fetchHobbi, activities.hobbies]",{"range":"248","text":"249"},"Update the dependencies array to be: [header, fetchInterests, activities.interests]",{"range":"250","text":"251"},"Update the dependencies array to be: [header, fetchMusics, activities.favouriteMusic]",{"range":"252","text":"253"},"Update the dependencies array to be: [header, getReads, activities.favouriteReads]",{"range":"254","text":"255"},"Update the dependencies array to be: [header, getMovies, activities.preferredMovies]",{"range":"256","text":"257"},"Update the dependencies array to be: [header, getSports, activities.sports]",{"range":"258","text":"259"},"Update the dependencies array to be: [header, getCuisine, activities.favouriteCuisine]",{"range":"260","text":"261"},[2011,2025],"[page, header, users]",[812,820],"[header, history]",[1780,1800],"[header, fetchHobbi, activities.hobbies]",[1809,1833],"[header, fetchInterests, activities.interests]",[1783,1804],"[header, fetchMusics, activities.favouriteMusic]",[1766,1784],"[header, getReads, activities.favouriteReads]",[1779,1798],"[header, getMovies, activities.preferredMovies]",[1687,1706],"[header, getSports, activities.sports]",[1714,1734],"[header, getCuisine, activities.favouriteCuisine]"]