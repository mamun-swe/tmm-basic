[{"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js":"1","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js":"2","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js":"3","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js":"4","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js":"5","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js":"6","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js":"7","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js":"8","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js":"9","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js":"10","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js":"11","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js":"12","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js":"13","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js":"14","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js":"15","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js":"16","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js":"17","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js":"18","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js":"19","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js":"20","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js":"21","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js":"22","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js":"23","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js":"24","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Qualification.js":"25","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\WorkingWith.js":"26","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\ProfessionArea.js":"27"},{"size":160,"mtime":1611984454498,"results":"28","hashOfConfig":"29"},{"size":592,"mtime":1612072965756,"results":"30","hashOfConfig":"29"},{"size":715,"mtime":1612072965759,"results":"31","hashOfConfig":"29"},{"size":8864,"mtime":1612334588767,"results":"32","hashOfConfig":"29"},{"size":5046,"mtime":1612437657911,"results":"33","hashOfConfig":"29"},{"size":335,"mtime":1612072965762,"results":"34","hashOfConfig":"29"},{"size":113,"mtime":1611984454502,"results":"35","hashOfConfig":"29"},{"size":32027,"mtime":1612355128005,"results":"36","hashOfConfig":"29"},{"size":6538,"mtime":1612418660317,"results":"37","hashOfConfig":"29"},{"size":15237,"mtime":1611984454490,"results":"38","hashOfConfig":"29"},{"size":13160,"mtime":1612334588762,"results":"39","hashOfConfig":"29"},{"size":7010,"mtime":1612072965757,"results":"40","hashOfConfig":"29"},{"size":4632,"mtime":1611984454492,"results":"41","hashOfConfig":"29"},{"size":4539,"mtime":1611984454491,"results":"42","hashOfConfig":"29"},{"size":33027,"mtime":1612440671896,"results":"43","hashOfConfig":"29"},{"size":148,"mtime":1612009927090,"results":"44","hashOfConfig":"29"},{"size":6497,"mtime":1611984454494,"results":"45","hashOfConfig":"29"},{"size":2418,"mtime":1611984454496,"results":"46","hashOfConfig":"29"},{"size":4199,"mtime":1611984454497,"results":"47","hashOfConfig":"29"},{"size":2421,"mtime":1611984454494,"results":"48","hashOfConfig":"29"},{"size":2436,"mtime":1611984454495,"results":"49","hashOfConfig":"29"},{"size":2455,"mtime":1611984454494,"results":"50","hashOfConfig":"29"},{"size":2485,"mtime":1611984454495,"results":"51","hashOfConfig":"29"},{"size":2450,"mtime":1611984454496,"results":"52","hashOfConfig":"29"},{"size":2452,"mtime":1612351160196,"results":"53","hashOfConfig":"29"},{"size":2436,"mtime":1612418660318,"results":"54","hashOfConfig":"29"},{"size":2460,"mtime":1612422487894,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qcr6mu",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js",[],["115","116"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js",["117"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { api } from \"../../utils/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Images } from \"../../utils/Images\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { ic_create } from \"react-icons-kit/md\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Index = () => {\r\n    const refs = createRef();\r\n    const windowWidth = window.innerWidth;\r\n    const { register, handleSubmit } = useForm();\r\n    const [page, setPage] = useState(0);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n    const [filteredUsers, setFilteredUsers] = useState(users);\r\n    const fakeArr = [...Array(12).keys()]\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [page]);\r\n\r\n    // Fetch Users\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/user/index?_page=${page}&_limit=36`);\r\n            if (response.status === 200) {\r\n                setUsers([\r\n                    ...users,\r\n                    ...response.data.users\r\n                ]);\r\n                setFilteredUsers([\r\n                    ...users,\r\n                    ...response.data.users\r\n                ]);\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Submit to filter user\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            // Find from loaded data\r\n            const result = users.filter((x) => x.email.toLowerCase().includes(data.query.toLowerCase()));\r\n            if (result && result.length > 0) {\r\n                setFilteredUsers(result);\r\n            } else {\r\n                // Find from server\r\n                const serverResult = await axios.get(`${api}admin/user/search?query=${data.query\r\n                    }`);\r\n                if (serverResult.status === 200 && serverResult.data) {\r\n                    setFilteredUsers(serverResult.data);\r\n                } else {\r\n                    setFilteredUsers(result);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    // On change filter\r\n    const filterHandle = (event) => {\r\n        const value = event.target.value;\r\n        if (!value) {\r\n            setLoading(true);\r\n            fetchUsers();\r\n        }\r\n    };\r\n\r\n    // is loading from fetch API data\r\n    if (isLoading) {\r\n        return (<div className=\"users-index\">\r\n            <div className=\"container-fluid py-3 py-lg-4\">\r\n                <div className=\"row\"> {/* Search */}\r\n                    <div className=\"col-12 search-column\">\r\n                        <div className=\"card border-0\"></div>\r\n                    </div>\r\n\r\n                    {/* Users */}\r\n                    <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\r\n                        {\r\n                            fakeArr.map((i) => (<div className=\"card border-0\"\r\n                                key={i}>\r\n                                <div className=\"card-body text-center\">\r\n                                    <div className=\"photo-container rounded-circle\">\r\n                                        <Skeleton circle={true}\r\n                                            animation={true}\r\n                                            count={1}\r\n                                            width={90}\r\n                                            height={90} />\r\n                                    </div>\r\n                                    <div className=\"content-container\"\r\n                                        ref={refs}>\r\n                                        <Skeleton className=\"mb-1\"\r\n                                            animation={true}\r\n                                            count={1}\r\n                                            width={\r\n                                                refs.innerWidth\r\n                                            }\r\n                                            height={28} />\r\n                                        <Skeleton animation={true}\r\n                                            count={1}\r\n                                            width={\r\n                                                windowWidth > 576 ? 150 : 80\r\n                                            }\r\n                                            height={20} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>))\r\n                        } </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (<div className=\"users-index\">\r\n        <div className=\"container-fluid py-3 py-lg-4\">\r\n            <div className=\"row\"> {/* Search */}\r\n                <div className=\"col-12 search-column\">\r\n                    <div className=\"text-center\">\r\n                        <h3 className=\"mb-3\">{users.length}Users</h3>\r\n                    </div>\r\n\r\n                    <div className=\"card border-0\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-fill\">\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"query\"\r\n                                            className=\"form-control shadow-none border-0\"\r\n                                            placeholder=\"Search user by e-mail\"\r\n                                            ref={register()}\r\n                                            onChange={filterHandle}\r\n                                        />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Users */}\r\n                <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\r\n                    <InfiniteScroll\r\n                        dataLength={filteredUsers.length}\r\n                        next={() => setPage(page + 1)}\r\n                        hasMore={true}\r\n                    >\r\n                        {filteredUsers && filteredUsers.length > 0 ?\r\n                            (filteredUsers.map((user, i) => (\r\n                                <div className=\"card border-0\" key={i}>\r\n                                    <div className=\"card-body text-center\">\r\n                                        <div className=\"photo-container rounded-circle\">\r\n                                            <img\r\n                                                src={user.profilePicture.clearImage ? user.profilePicture.clearImage : Images.Blank}\r\n                                                className=\"img-fluid\"\r\n                                                alt=\"...\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"content-container\">\r\n                                            <h6 className=\"text-capitalize\">{user.name ? user.name : null}</h6>\r\n                                            <p> {user.email ? user.email : null}</p>\r\n                                        </div>\r\n                                        <Link to={`/users/${user.email}/edit`}\r\n                                            type=\"button\"\r\n                                            className=\"btn shadow-none rounded-circle\">\r\n                                            <Icon icon={ic_create} size={20} />\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                            ) : (\r\n                                <div className=\"text-center four-o-four py-4\">\r\n                                    <img\r\n                                        src={Images.NoData}\r\n                                        className=\"img-fluid\"\r\n                                        alt=\"...\"\r\n                                    />\r\n                                    <h5>Not data found !!</h5>\r\n                                </div>)\r\n                        } </InfiniteScroll>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\nexport default Index;\r\n","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js",["118"],"import React, { useState, useEffect } from 'react'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport { Images } from '../../utils/Images'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n\r\nimport PrimaryInfoForm from '../../components/forms/PrimaryInfo'\r\nimport PictureAndDescUpdateForm from '../../components/forms/ProfilePictureDescription'\r\nimport BasicAndLifestyleUpdateForm from '../../components/forms/BasicAndLifestyle'\r\nimport ContactInfoCreateForm from '../../components/forms/ContactInformation'\r\nimport HobbiForm from '../../components/forms/Hobbi'\r\nimport InterestForm from '../../components/forms/Interests'\r\nimport MusicForm from '../../components/forms/FavouriteMusic'\r\nimport PartnerPreferenceForm from '../../components/forms/PartnerPreference'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst Edit = () => {\r\n    const { email } = useParams()\r\n    const [user, setUser] = useState({})\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUser()\r\n    }, [email])\r\n\r\n    // Fetch User\r\n    const fetchUser = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/user/show/${email}`)\r\n            if (response.status === 200) {\r\n                setLoading(false)\r\n                setUser(response.data.user)\r\n                console.log(response.data.user)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n                // toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // re fetch data after updated\r\n    const reFetch = data => {\r\n        if (data) {\r\n            fetchUser()\r\n        }\r\n    }\r\n\r\n    // if loading\r\n    if (isLoading)\r\n        return (<div>\r\n            <p>Loading...</p>\r\n        </div>)\r\n\r\n\r\n    return (<div className=\"user-edit\">\r\n        <div className=\"card\">\r\n            <div className=\"card-header bg-white p-4\">\r\n                <div className=\"d-flex\">\r\n                    <div>\r\n                        <h4 className=\"mb-0\">User Edit</h4>\r\n                        <p className=\"mb-0\">\r\n                            <Link to=\"/\">Go Back</Link>\r\n                            to see registered users.</p>\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                        <img src={\r\n                            Images.Logo\r\n                        }\r\n                            className=\"img-fluid\"\r\n                            alt=\"Company logo\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n                {/* Primary info */}\r\n                <PrimaryInfoForm\r\n                    email={email}\r\n                    user={user}\r\n                    updated={reFetch}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        {/* Profile Picture & Description form */}\r\n        <PictureAndDescUpdateForm\r\n            email={email}\r\n            profileimages={user.profilePicture ? user.profilePicture : null}\r\n            olddescription={user.shortDescription ? user.shortDescription : null}\r\n            updated={reFetch}\r\n        />\r\n\r\n        {/* Basic and lifestyle information form */}\r\n        <BasicAndLifestyleUpdateForm\r\n            email={email}\r\n            basicandlifeinfo={user.basicAndLifestyleInformation ? user.basicAndLifestyleInformation : null}\r\n        />\r\n\r\n        {/* Contact information form */}\r\n        <ContactInfoCreateForm\r\n            email={email}\r\n            contact={user.contactInformation ? user.contactInformation : null}\r\n        />\r\n        {/* Personal activities */}\r\n        <div className=\"card my-lg-4\">\r\n            <div className=\"card-header bg-white\">\r\n                <h6 className=\"mb-0\">Personal Activities</h6>\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n                <div className=\"row\"> {/* Hobbi create form */}\r\n                    <div className=\"col-12 col-lg-6 pr-lg-4 border-bottom pb-4 mb-4\">\r\n                        <HobbiForm\r\n                            email={email}\r\n                            activities={user.personalActivities ? user.personalActivities : null}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Interests create form */}\r\n                    <div className=\"col-12 col-lg-6 pl-lg-4 border-bottom pb-4 mb-4\">\r\n                        <InterestForm email={email} />\r\n                    </div>\r\n\r\n                    {/* Music create form */}\r\n                    <div className=\"col-12 col-lg-6 pl-lg-4 border-bottom pb-4 mb-4\">\r\n                        <MusicForm email={email} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Partner preference */}\r\n        <PartnerPreferenceForm email={email}  updated={reFetch} />\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Edit;\r\n","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js",["119","120","121"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport Icon from 'react-icons-kit'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport BranchCreateModal from '../../components/modal/Branch'\r\nimport ReligionCreateModal from '../../components/modal/Religion'\r\nimport SocialOrderCreateModal from '../../components/modal/SocialOrder'\r\nimport CountryCreateModal from '../../components/modal/Country'\r\nimport LanguageCreateModal from '../../components/modal/Language'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PrimaryInfo = ({ email, user, updated }) => {\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const [isUpdate, setUpdate] = useState(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    // Input states\r\n    const [branch, setBranch] = useState({ value: null, error: null })\r\n    const [religion, setReligion] = useState({ value: null, error: null })\r\n    const [socialOrder, setSocialOrder] = useState({ value: null, error: null })\r\n    const [birthCountry, setBirthCountry] = useState({ value: null, error: null })\r\n    const [livingCountry, setLivingCountry] = useState({ value: null })\r\n    const [motherTongue, setMotherTongue] = useState({ value: null, error: null })\r\n    const [spokenLanguage, setSpokenLanguage] = useState({ value: [], error: null })\r\n\r\n    // Branch states\r\n    const [isBranchShow, setBranchShow] = useState(false)\r\n    const [isBranchCreated, setBranchCreated] = useState(false)\r\n    const [branchOptions, setBranchOptions] = useState([])\r\n\r\n    // Religion states\r\n    const [serverReligions, setServerReligions] = useState([])\r\n    const [religionOptions, setReligionOptions] = useState([])\r\n    const [isReligionShow, setReligionShow] = useState(false)\r\n    const [isCreateReligion, setCreateReligion] = useState(false)\r\n\r\n    // Social order states\r\n    const [isSocialOrderShow, setSocialOrderShow] = useState(false)\r\n    const [isCreateSocialOrder, setCreateSocialOrder] = useState(false)\r\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\r\n\r\n    // Country states\r\n    const [isCountryShow, setCountryShow] = useState(false)\r\n    const [isCountryCreate, setCountryCreate] = useState(false)\r\n    const [countryOptions, setCountryOptions] = useState([])\r\n\r\n    // Language states\r\n    const [isLanguageShow, setLanguageShow] = useState(false)\r\n    const [isLanguageCreated, setLanguageCreated] = useState(false)\r\n    const [languageOptions, setLanguageOptions] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        getReligion()\r\n        getCountry()\r\n        getBranches()\r\n        getLanguage()\r\n    }, [])\r\n\r\n    // onChange branch\r\n    const onChangeBranch = event => setBranch({ value: event.value, error: null })\r\n\r\n    // onChange religion\r\n    const onChangeReligion = event => {\r\n        setReligion({ value: event.value, error: null })\r\n        // Find single religion\r\n        const singleReligion = serverReligions.find(religion => religion.name === event.value)\r\n        // Set to social orders\r\n        setSocialOrderOptions(singleReligion.socialOrders.map(data => ({ label: data, value: data })))\r\n    }\r\n\r\n    // OnChange social order\r\n    const onChangeSocialOrder = event => setSocialOrder({ value: event.value, error: null })\r\n\r\n    // OnChange Birth Country\r\n    const onChangeBirthCountry = event => setBirthCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Living Country\r\n    const onChangeLivingCountry = event => setLivingCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Mother Toungue\r\n    const onChangeMotherTongue = event => setMotherTongue({ value: event.value, error: null })\r\n\r\n    // OnChange Spoken Language\r\n    const onChangeSpokenLanguage = event => setSpokenLanguage({ value: event, error: null })\r\n\r\n\r\n    // Get Branch\r\n    const getBranches = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/branch`)\r\n            if (response.status === 200) {\r\n                setBranchOptions(response.data.branches.map(branch => ({ label: branch.name, value: branch._id })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Branch\r\n    const createBranch = async (data) => {\r\n        try {\r\n            setBranchCreated(true)\r\n            const response = await axios.post(`${api}admin/branch`, data)\r\n            if (response.status === 201) {\r\n                getBranches()\r\n                setBranchCreated(false)\r\n                setBranchShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setBranchCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Religion\r\n    const getReligion = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/religion`)\r\n            setServerReligions(response.data.religions)\r\n            setReligionOptions(response.data.religions.map(data => ({ label: data.name, value: data.name })))\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Religion\r\n    const createReligion = async (data) => {\r\n        try {\r\n            setCreateReligion(true)\r\n            const response = await axios.post(`${api}admin/religion`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Social Order\r\n    const createSocialOrder = async (data) => {\r\n        try {\r\n            setCreateSocialOrder(true)\r\n            const response = await axios.post(`${api}admin/religion/socialorder`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateSocialOrder(false)\r\n                setSocialOrderShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateSocialOrder(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Country\r\n    const getCountry = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/country`)\r\n            if (response.status === 200) {\r\n                setCountryOptions(response.data.countries.map(country => ({ label: country.name, value: country.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Country\r\n    const createCountry = async (data) => {\r\n        try {\r\n            setCountryCreate(true)\r\n            const response = await axios.post(`${api}admin/country`, data)\r\n            if (response.status === 201) {\r\n                getCountry()\r\n                setCountryCreate(false)\r\n                setCountryShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCountryCreate(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Language\r\n    const getLanguage = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/language/index`)\r\n            if (response.status === 200) {\r\n                setLanguageOptions(response.data.languages.map(language => ({ label: language.name, value: language.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) console.log(error.response)\r\n        }\r\n    }\r\n\r\n    // Create Language\r\n    const createLanguage = async (data) => {\r\n        try {\r\n            setLanguageCreated(true)\r\n            const response = await axios.post(`${api}admin/language/store`, data)\r\n            if (response.status === 201) {\r\n                getLanguage()\r\n                setLanguageCreated(false)\r\n                setLanguageShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setLanguageCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Submit Registration Data\r\n    const onSubmit = async (data) => {\r\n\r\n        // Check Branch\r\n        if (!branch.value) return setBranch({ error: true })\r\n\r\n        // Check Religion\r\n        if (!religion.value) return setReligion({ error: true })\r\n\r\n        // Check Social Order\r\n        if (!socialOrder.value) return setSocialOrder({ error: true })\r\n\r\n        // Check Birth Country\r\n        if (!birthCountry.value) return setBirthCountry({ error: true })\r\n\r\n        // Check Mother Toungue\r\n        if (!motherTongue.value) return setMotherTongue({ error: true })\r\n\r\n        const regData = {\r\n            ...data,\r\n            branch: branch.value,\r\n            religion: religion.value,\r\n            socialOrder: socialOrder.value,\r\n            birthCountry: birthCountry.value,\r\n            livingCountry: livingCountry.value ? livingCountry.value : null,\r\n            motherTongue: motherTongue.value,\r\n            spokenLanguage: spokenLanguage.value ? spokenLanguage.value : null\r\n        }\r\n\r\n        console.log(regData)\r\n        updated(true)\r\n        // setUpdate(true)\r\n        // toast.success('Successfully account updated.')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Form 1 */}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"row\">\r\n                    {/* Branch */}\r\n                    <div className=\"col-12 col-lg-4 ml-auto\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {branch.error ?\r\n                                <small className=\"text-danger\">Branch is required.</small>\r\n                                : <small>Branch</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select branch'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={branchOptions}\r\n                                        onChange={onChangeBranch}\r\n                                    // defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setBranchShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {/* Name */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.name && errors.name.message ? (\r\n                                <small className=\"text-danger\">{errors.name && errors.name.message}</small>\r\n                            ) : <small>Name</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                defaultValue={user.name ? user.name : null}\r\n                                className={errors.name ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"Your name\"\r\n                                ref={register({\r\n                                    required: \"Name is required.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Minimun length 5 character.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Phone */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.phone && errors.phone.message ? (\r\n                                <small className=\"text-danger\">{errors.phone && errors.phone.message}</small>\r\n                            ) : <small>Phone number</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                defaultValue={user.phone ? user.phone : null}\r\n                                className={errors.phone ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"( 01X-XXXX-XXXX )\"\r\n                                ref={register({\r\n                                    required: \"Phone number is required.\",\r\n                                    pattern: {\r\n                                        value: /^\\(?([0-9]{3})\\)?([0-9]{8})$/,\r\n                                        message: \"Number isn't valid.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* E-mail */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>E-mail</small>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled\r\n                                defaultValue={user.email ? user.email : null}\r\n                                className=\"form-control shadow-none\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Gender */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.gender && errors.gender.message ? (\r\n                                <small className=\"text-danger\">{errors.gender && errors.gender.message}</small>\r\n                            ) : <small>Gender</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"gender\"\r\n                                className={errors.gender ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Gender is required.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Looking For */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.lookingFor && errors.lookingFor.message ? (\r\n                                <small className=\"text-danger\">{errors.lookingFor && errors.lookingFor.message}</small>\r\n                            ) : <small>Looking for</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"lookingFor\"\r\n                                className={errors.lookingFor ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Select what you want.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"groom\">Groom</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* DOB */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.dob && errors.dob.message ? (\r\n                                <small className=\"text-danger\">{errors.dob && errors.dob.message}</small>\r\n                            ) : <small>Date of birth</small>\r\n                            }\r\n\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                className={errors.dob ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Date of birth is required\"\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Religion */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"form-group mb-4\">\r\n                            {religion.error ?\r\n                                <small className=\"text-danger\">Religion is required.</small>\r\n                                : <small>Religion</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select religion'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={religionOptions}\r\n                                        onChange={onChangeReligion}\r\n                                    // defaultOptions={{ value: user.religion, label: user.religion }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setReligionShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Social order */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {socialOrder.error ?\r\n                                <small className=\"text-danger\">Social order is required.</small>\r\n                                : <small>Social order</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={socialOrderOptions}\r\n                                        onChange={onChangeSocialOrder}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setSocialOrderShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Birth Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {birthCountry.error ?\r\n                                <small className=\"text-danger\">Birth country is required.</small>\r\n                                : <small>Birth country</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select birth country'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeBirthCountry}\r\n                                        defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Living Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Living country</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeLivingCountry}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Mother tounge  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {motherTongue.error ?\r\n                                <small className=\"text-danger\">Mother toungue is required.</small>\r\n                                : <small>Mother tounge</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select mother tounge'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeMotherTongue}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Spoken language  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Spoken language</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        placeholder={'Select spoken language'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeSpokenLanguage}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Submit Button */}\r\n                <div className=\"text-right\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn shadow-none\"\r\n                        disabled={isUpdate}\r\n                    >\r\n                        {isUpdate ? <span>Updating...</span> : <span>Update</span>}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            {/* Modals */}\r\n\r\n            {/* Branch create modal */}\r\n            {isBranchShow ?\r\n                <BranchCreateModal\r\n                    show={isBranchShow}\r\n                    newdata={createBranch}\r\n                    countries={countryOptions}\r\n                    isCreate={isBranchCreated}\r\n                    onHide={() => setBranchShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Religion create modal */}\r\n            {isReligionShow ?\r\n                <ReligionCreateModal\r\n                    show={isReligionShow}\r\n                    newdata={createReligion}\r\n                    isCreate={isCreateReligion}\r\n                    onHide={() => setReligionShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Social order create modal */}\r\n            {isSocialOrderShow ?\r\n                <SocialOrderCreateModal\r\n                    show={isSocialOrderShow}\r\n                    religions={religionOptions}\r\n                    newdata={createSocialOrder}\r\n                    isCreate={isCreateSocialOrder}\r\n                    onHide={() => setSocialOrderShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Country create modal */}\r\n            {isCountryShow ?\r\n                <CountryCreateModal\r\n                    show={isCountryShow}\r\n                    newdata={createCountry}\r\n                    isCreate={isCountryCreate}\r\n                    onHide={() => setCountryShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Language create modal  */}\r\n            {isLanguageShow ?\r\n                <LanguageCreateModal\r\n                    show={isLanguageShow}\r\n                    newdata={createLanguage}\r\n                    isCreate={isLanguageCreated}\r\n                    onHide={() => setLanguageShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrimaryInfo;\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: 42,\r\n        fontSize: 14,\r\n        color: '#000',\r\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\r\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\r\n        borderRadius: 0\r\n    }),\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js",["122","123","124"],"import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Icon from 'react-icons-kit'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nimport HobbiCreateModal from '../modal/Hobbi'\r\n\r\nimport { removeItem } from '../../utils/helpers'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PersonalActivities = ({ email, activities }) => {\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [hobbies, setHobbies] = useState([])\r\n\r\n    // Input states\r\n    const [selectedHobbies, setSelectedHobbies] = useState([])\r\n    const [isEmpty, setEmpty] = useState(false)\r\n\r\n    // Hobbi create states\r\n    const [show, setShow] = useState(false)\r\n    const [created, setCreated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchHobbi()\r\n    }, [])\r\n\r\n    // Handle hobbie\r\n    // const handleHobbie = event => {\r\n    //     const newHobbi = event.target.value\r\n    // const exHobbie = selectedHobbies.find((hobbi) => hobbi === newHobbi)\r\n    // if (exHobbie) {\r\n    //     const newArr = selectedHobbies.filter(e => e !== newHobbi)\r\n    //     return setSelectedHobbies(newArr)\r\n    // }\r\n    // setSelectedHobbies([...selectedHobbies, newHobbi])\r\n    // }\r\n\r\n    // Fetch Hobbi\r\n    const fetchHobbi = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/activity/index`)\r\n            if (response.status === 200) {\r\n                setHobbies(response.data.activities.hobbies)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Hobbi\r\n    const createHobbi = async (data) => {\r\n        try {\r\n            setCreated(true)\r\n            const response = await axios.post(`${api}admin/activity/store/hobbi`, data)\r\n            if (response.status === 201) {\r\n                fetchHobbi()\r\n                setCreated(false)\r\n                setShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Add hobbi\r\n    const addHobbi = async () => {\r\n        try {\r\n            console.log(selectedHobbies)\r\n            // console.log(activities.hobbies)\r\n            // setSelectedHobbies([...selectedHobbies, activities.hobbies])\r\n            // console.log(selectedHobbies)\r\n\r\n            // if (!selectedHobbies.length) return setEmpty(true)\r\n            // const data = { email: email, hobbies: selectedHobbies }\r\n\r\n            // setLoading(true)\r\n            // const response = await axios.put(`${api}admin/user/profile/activity?field=hobbies`, data)\r\n            // if (response.status === 201) {\r\n            //     setLoading(false)\r\n            //     toast.success(response.data.message)\r\n            // }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setLoading(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Active sellected options\r\n    const checkedHobbi = hobbi => {\r\n        if (activities) {\r\n            const activity = activities.hobbies.find(data => data === hobbi)\r\n            if (activity)\r\n                return activity\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggleCheckbox = event => {\r\n        const item = event.target.value\r\n\r\n        // setSelectedHobbies(activities.hobbies)\r\n        console.log(item);\r\n\r\n        // const isAvailable = selectedHobbies.find(oldItem => oldItem === item)\r\n        // if (isAvailable) {\r\n        //     const freshItems = removeItem(selectedHobbies, item)\r\n        //     setSelectedHobbies(freshItems)\r\n        // } else {\r\n        //     setSelectedHobbies([...selectedHobbies, item])\r\n        // }\r\n\r\n\r\n      \r\n\r\n\r\n        // const exHobbie = selectedHobbies.find((hobbi) => hobbi === item)\r\n        // if (exHobbie) {\r\n        //     const index = selectedHobbies.indexOf(item)\r\n        //     if (index > -1) { selectedHobbies.splice(index, 1) }\r\n        // }\r\n        // setSelectedHobbies([...selectedHobbies, item])\r\n\r\n        // console.log(selectedHobbies);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {/* Section header */}\r\n            <div className=\"section-header d-flex mb-3\">\r\n                <div className=\"pr-3\">\r\n                    <button\r\n                        type=\"button\"\r\n                        style={customStyles.smBtn}\r\n                        className=\"btn shadow-none rounded-circle p-1\"\r\n                        onClick={() => setShow(true)}\r\n                    >\r\n                        <Icon icon={ic_add} size={22} />\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <p className=\"section-title\">\r\n                        {isEmpty ? <span className=\"text-danger\">Please select hobbies</span> : <span>Hobbies</span>}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Section body */}\r\n            <div className=\"section-body\">\r\n                <div className=\"row\">\r\n                    {hobbies && hobbies.map((hobbie, i) =>\r\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\r\n                            <Form.Group controlId={i}>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label={hobbie}\r\n                                    value={hobbie}\r\n                                    onChange={toggleCheckbox}\r\n                                    defaultChecked={checkedHobbi(hobbie)}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    )}\r\n\r\n                    {hobbies && hobbies.length ?\r\n                        <div className=\"col-12 text-right\">\r\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addHobbi} disabled={isLoading}>\r\n                                {isLoading ? <span>Adding...</span> : <span>Add Hobbies</span>}\r\n                            </button>\r\n                        </div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modals */}\r\n            {/* Hobbi Create */}\r\n            {show ?\r\n                <HobbiCreateModal\r\n                    show={show}\r\n                    newdata={createHobbi}\r\n                    isCreate={created}\r\n                    onHide={() => setShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalActivities;\r\n\r\nconst customStyles = {\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Qualification.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\WorkingWith.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\ProfessionArea.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":25,"column":8,"nodeType":"131","endLine":25,"endColumn":14,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":29,"column":8,"nodeType":"131","endLine":29,"endColumn":15,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":21,"column":22,"nodeType":"137","messageId":"138","endLine":21,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":22,"column":12,"nodeType":"137","messageId":"138","endLine":22,"endColumn":21},{"ruleId":"135","severity":1,"message":"140","line":22,"column":23,"nodeType":"137","messageId":"138","endLine":22,"endColumn":33},{"ruleId":"135","severity":1,"message":"141","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":20},{"ruleId":"135","severity":1,"message":"142","line":21,"column":29,"nodeType":"137","messageId":"138","endLine":21,"endColumn":47},{"ruleId":"135","severity":1,"message":"143","line":22,"column":21,"nodeType":"137","messageId":"138","endLine":22,"endColumn":29},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["147"],"no-unused-vars","'setUpdate' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'removeItem' is defined but never used.","'setSelectedHobbies' is assigned a value but never used.","'setEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [fetchUsers, page]",{"range":"152","text":"153"},"Update the dependencies array to be: [email, fetchUser]",{"range":"154","text":"155"},[938,944],"[fetchUsers, page]",[1150,1157],"[email, fetchUser]"]