[{"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js":"1","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js":"2","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js":"3","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js":"4","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js":"5","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js":"6","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js":"7","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js":"8","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js":"9","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js":"10","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js":"11","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js":"12","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js":"13","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js":"14","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js":"15","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js":"16","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js":"17","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js":"18","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js":"19","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js":"20","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js":"21","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js":"22","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js":"23","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js":"24","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Qualification.js":"25"},{"size":160,"mtime":1611984454498,"results":"26","hashOfConfig":"27"},{"size":592,"mtime":1612072965756,"results":"28","hashOfConfig":"27"},{"size":8864,"mtime":1612334588767,"results":"29","hashOfConfig":"27"},{"size":715,"mtime":1612072965759,"results":"30","hashOfConfig":"27"},{"size":5027,"mtime":1612355128006,"results":"31","hashOfConfig":"27"},{"size":113,"mtime":1611984454502,"results":"32","hashOfConfig":"27"},{"size":335,"mtime":1612072965762,"results":"33","hashOfConfig":"27"},{"size":32027,"mtime":1612355128005,"results":"34","hashOfConfig":"27"},{"size":6476,"mtime":1612170136257,"results":"35","hashOfConfig":"27"},{"size":15237,"mtime":1611984454490,"results":"36","hashOfConfig":"27"},{"size":13160,"mtime":1612334588762,"results":"37","hashOfConfig":"27"},{"size":7010,"mtime":1612072965757,"results":"38","hashOfConfig":"27"},{"size":4632,"mtime":1611984454492,"results":"39","hashOfConfig":"27"},{"size":4539,"mtime":1611984454491,"results":"40","hashOfConfig":"27"},{"size":18996,"mtime":1612355128001,"results":"41","hashOfConfig":"27"},{"size":148,"mtime":1612009927090,"results":"42","hashOfConfig":"27"},{"size":6497,"mtime":1611984454494,"results":"43","hashOfConfig":"27"},{"size":2418,"mtime":1611984454496,"results":"44","hashOfConfig":"27"},{"size":4199,"mtime":1611984454497,"results":"45","hashOfConfig":"27"},{"size":2421,"mtime":1611984454494,"results":"46","hashOfConfig":"27"},{"size":2436,"mtime":1611984454495,"results":"47","hashOfConfig":"27"},{"size":2455,"mtime":1611984454494,"results":"48","hashOfConfig":"27"},{"size":2485,"mtime":1611984454495,"results":"49","hashOfConfig":"27"},{"size":2450,"mtime":1611984454496,"results":"50","hashOfConfig":"27"},{"size":2452,"mtime":1612351160196,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qcr6mu",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js",["105"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js",["106"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js",["107","108","109"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport Icon from 'react-icons-kit'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport BranchCreateModal from '../../components/modal/Branch'\r\nimport ReligionCreateModal from '../../components/modal/Religion'\r\nimport SocialOrderCreateModal from '../../components/modal/SocialOrder'\r\nimport CountryCreateModal from '../../components/modal/Country'\r\nimport LanguageCreateModal from '../../components/modal/Language'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PrimaryInfo = ({ email, user, updated }) => {\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const [isUpdate, setUpdate] = useState(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    // Input states\r\n    const [branch, setBranch] = useState({ value: null, error: null })\r\n    const [religion, setReligion] = useState({ value: null, error: null })\r\n    const [socialOrder, setSocialOrder] = useState({ value: null, error: null })\r\n    const [birthCountry, setBirthCountry] = useState({ value: null, error: null })\r\n    const [livingCountry, setLivingCountry] = useState({ value: null })\r\n    const [motherTongue, setMotherTongue] = useState({ value: null, error: null })\r\n    const [spokenLanguage, setSpokenLanguage] = useState({ value: [], error: null })\r\n\r\n    // Branch states\r\n    const [isBranchShow, setBranchShow] = useState(false)\r\n    const [isBranchCreated, setBranchCreated] = useState(false)\r\n    const [branchOptions, setBranchOptions] = useState([])\r\n\r\n    // Religion states\r\n    const [serverReligions, setServerReligions] = useState([])\r\n    const [religionOptions, setReligionOptions] = useState([])\r\n    const [isReligionShow, setReligionShow] = useState(false)\r\n    const [isCreateReligion, setCreateReligion] = useState(false)\r\n\r\n    // Social order states\r\n    const [isSocialOrderShow, setSocialOrderShow] = useState(false)\r\n    const [isCreateSocialOrder, setCreateSocialOrder] = useState(false)\r\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\r\n\r\n    // Country states\r\n    const [isCountryShow, setCountryShow] = useState(false)\r\n    const [isCountryCreate, setCountryCreate] = useState(false)\r\n    const [countryOptions, setCountryOptions] = useState([])\r\n\r\n    // Language states\r\n    const [isLanguageShow, setLanguageShow] = useState(false)\r\n    const [isLanguageCreated, setLanguageCreated] = useState(false)\r\n    const [languageOptions, setLanguageOptions] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        getReligion()\r\n        getCountry()\r\n        getBranches()\r\n        getLanguage()\r\n    }, [])\r\n\r\n    // onChange branch\r\n    const onChangeBranch = event => setBranch({ value: event.value, error: null })\r\n\r\n    // onChange religion\r\n    const onChangeReligion = event => {\r\n        setReligion({ value: event.value, error: null })\r\n        // Find single religion\r\n        const singleReligion = serverReligions.find(religion => religion.name === event.value)\r\n        // Set to social orders\r\n        setSocialOrderOptions(singleReligion.socialOrders.map(data => ({ label: data, value: data })))\r\n    }\r\n\r\n    // OnChange social order\r\n    const onChangeSocialOrder = event => setSocialOrder({ value: event.value, error: null })\r\n\r\n    // OnChange Birth Country\r\n    const onChangeBirthCountry = event => setBirthCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Living Country\r\n    const onChangeLivingCountry = event => setLivingCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Mother Toungue\r\n    const onChangeMotherTongue = event => setMotherTongue({ value: event.value, error: null })\r\n\r\n    // OnChange Spoken Language\r\n    const onChangeSpokenLanguage = event => setSpokenLanguage({ value: event, error: null })\r\n\r\n\r\n    // Get Branch\r\n    const getBranches = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/branch`)\r\n            if (response.status === 200) {\r\n                setBranchOptions(response.data.branches.map(branch => ({ label: branch.name, value: branch._id })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Branch\r\n    const createBranch = async (data) => {\r\n        try {\r\n            setBranchCreated(true)\r\n            const response = await axios.post(`${api}admin/branch`, data)\r\n            if (response.status === 201) {\r\n                getBranches()\r\n                setBranchCreated(false)\r\n                setBranchShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setBranchCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Religion\r\n    const getReligion = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/religion`)\r\n            setServerReligions(response.data.religions)\r\n            setReligionOptions(response.data.religions.map(data => ({ label: data.name, value: data.name })))\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Religion\r\n    const createReligion = async (data) => {\r\n        try {\r\n            setCreateReligion(true)\r\n            const response = await axios.post(`${api}admin/religion`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Social Order\r\n    const createSocialOrder = async (data) => {\r\n        try {\r\n            setCreateSocialOrder(true)\r\n            const response = await axios.post(`${api}admin/religion/socialorder`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateSocialOrder(false)\r\n                setSocialOrderShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateSocialOrder(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Country\r\n    const getCountry = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/country`)\r\n            if (response.status === 200) {\r\n                setCountryOptions(response.data.countries.map(country => ({ label: country.name, value: country.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Country\r\n    const createCountry = async (data) => {\r\n        try {\r\n            setCountryCreate(true)\r\n            const response = await axios.post(`${api}admin/country`, data)\r\n            if (response.status === 201) {\r\n                getCountry()\r\n                setCountryCreate(false)\r\n                setCountryShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCountryCreate(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Language\r\n    const getLanguage = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/language/index`)\r\n            if (response.status === 200) {\r\n                setLanguageOptions(response.data.languages.map(language => ({ label: language.name, value: language.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) console.log(error.response)\r\n        }\r\n    }\r\n\r\n    // Create Language\r\n    const createLanguage = async (data) => {\r\n        try {\r\n            setLanguageCreated(true)\r\n            const response = await axios.post(`${api}admin/language/store`, data)\r\n            if (response.status === 201) {\r\n                getLanguage()\r\n                setLanguageCreated(false)\r\n                setLanguageShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setLanguageCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Submit Registration Data\r\n    const onSubmit = async (data) => {\r\n\r\n        // Check Branch\r\n        if (!branch.value) return setBranch({ error: true })\r\n\r\n        // Check Religion\r\n        if (!religion.value) return setReligion({ error: true })\r\n\r\n        // Check Social Order\r\n        if (!socialOrder.value) return setSocialOrder({ error: true })\r\n\r\n        // Check Birth Country\r\n        if (!birthCountry.value) return setBirthCountry({ error: true })\r\n\r\n        // Check Mother Toungue\r\n        if (!motherTongue.value) return setMotherTongue({ error: true })\r\n\r\n        const regData = {\r\n            ...data,\r\n            branch: branch.value,\r\n            religion: religion.value,\r\n            socialOrder: socialOrder.value,\r\n            birthCountry: birthCountry.value,\r\n            livingCountry: livingCountry.value ? livingCountry.value : null,\r\n            motherTongue: motherTongue.value,\r\n            spokenLanguage: spokenLanguage.value ? spokenLanguage.value : null\r\n        }\r\n\r\n        console.log(regData)\r\n        updated(true)\r\n        // setUpdate(true)\r\n        // toast.success('Successfully account updated.')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Form 1 */}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"row\">\r\n                    {/* Branch */}\r\n                    <div className=\"col-12 col-lg-4 ml-auto\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {branch.error ?\r\n                                <small className=\"text-danger\">Branch is required.</small>\r\n                                : <small>Branch</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select branch'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={branchOptions}\r\n                                        onChange={onChangeBranch}\r\n                                    // defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setBranchShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {/* Name */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.name && errors.name.message ? (\r\n                                <small className=\"text-danger\">{errors.name && errors.name.message}</small>\r\n                            ) : <small>Name</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                defaultValue={user.name ? user.name : null}\r\n                                className={errors.name ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"Your name\"\r\n                                ref={register({\r\n                                    required: \"Name is required.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Minimun length 5 character.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Phone */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.phone && errors.phone.message ? (\r\n                                <small className=\"text-danger\">{errors.phone && errors.phone.message}</small>\r\n                            ) : <small>Phone number</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                defaultValue={user.phone ? user.phone : null}\r\n                                className={errors.phone ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"( 01X-XXXX-XXXX )\"\r\n                                ref={register({\r\n                                    required: \"Phone number is required.\",\r\n                                    pattern: {\r\n                                        value: /^\\(?([0-9]{3})\\)?([0-9]{8})$/,\r\n                                        message: \"Number isn't valid.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* E-mail */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>E-mail</small>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled\r\n                                defaultValue={user.email ? user.email : null}\r\n                                className=\"form-control shadow-none\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Gender */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.gender && errors.gender.message ? (\r\n                                <small className=\"text-danger\">{errors.gender && errors.gender.message}</small>\r\n                            ) : <small>Gender</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"gender\"\r\n                                className={errors.gender ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Gender is required.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Looking For */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.lookingFor && errors.lookingFor.message ? (\r\n                                <small className=\"text-danger\">{errors.lookingFor && errors.lookingFor.message}</small>\r\n                            ) : <small>Looking for</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"lookingFor\"\r\n                                className={errors.lookingFor ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Select what you want.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"groom\">Groom</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* DOB */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.dob && errors.dob.message ? (\r\n                                <small className=\"text-danger\">{errors.dob && errors.dob.message}</small>\r\n                            ) : <small>Date of birth</small>\r\n                            }\r\n\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                className={errors.dob ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Date of birth is required\"\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Religion */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"form-group mb-4\">\r\n                            {religion.error ?\r\n                                <small className=\"text-danger\">Religion is required.</small>\r\n                                : <small>Religion</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select religion'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={religionOptions}\r\n                                        onChange={onChangeReligion}\r\n                                    // defaultOptions={{ value: user.religion, label: user.religion }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setReligionShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Social order */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {socialOrder.error ?\r\n                                <small className=\"text-danger\">Social order is required.</small>\r\n                                : <small>Social order</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={socialOrderOptions}\r\n                                        onChange={onChangeSocialOrder}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setSocialOrderShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Birth Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {birthCountry.error ?\r\n                                <small className=\"text-danger\">Birth country is required.</small>\r\n                                : <small>Birth country</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select birth country'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeBirthCountry}\r\n                                        defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Living Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Living country</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeLivingCountry}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Mother tounge  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {motherTongue.error ?\r\n                                <small className=\"text-danger\">Mother toungue is required.</small>\r\n                                : <small>Mother tounge</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select mother tounge'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeMotherTongue}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Spoken language  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Spoken language</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        placeholder={'Select spoken language'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeSpokenLanguage}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Submit Button */}\r\n                <div className=\"text-right\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn shadow-none\"\r\n                        disabled={isUpdate}\r\n                    >\r\n                        {isUpdate ? <span>Updating...</span> : <span>Update</span>}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            {/* Modals */}\r\n\r\n            {/* Branch create modal */}\r\n            {isBranchShow ?\r\n                <BranchCreateModal\r\n                    show={isBranchShow}\r\n                    newdata={createBranch}\r\n                    countries={countryOptions}\r\n                    isCreate={isBranchCreated}\r\n                    onHide={() => setBranchShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Religion create modal */}\r\n            {isReligionShow ?\r\n                <ReligionCreateModal\r\n                    show={isReligionShow}\r\n                    newdata={createReligion}\r\n                    isCreate={isCreateReligion}\r\n                    onHide={() => setReligionShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Social order create modal */}\r\n            {isSocialOrderShow ?\r\n                <SocialOrderCreateModal\r\n                    show={isSocialOrderShow}\r\n                    religions={religionOptions}\r\n                    newdata={createSocialOrder}\r\n                    isCreate={isCreateSocialOrder}\r\n                    onHide={() => setSocialOrderShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Country create modal */}\r\n            {isCountryShow ?\r\n                <CountryCreateModal\r\n                    show={isCountryShow}\r\n                    newdata={createCountry}\r\n                    isCreate={isCountryCreate}\r\n                    onHide={() => setCountryShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Language create modal  */}\r\n            {isLanguageShow ?\r\n                <LanguageCreateModal\r\n                    show={isLanguageShow}\r\n                    newdata={createLanguage}\r\n                    isCreate={isLanguageCreated}\r\n                    onHide={() => setLanguageShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrimaryInfo;\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: 42,\r\n        fontSize: 14,\r\n        color: '#000',\r\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\r\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\r\n        borderRadius: 0\r\n    }),\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js",["110","111","112"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js",["113","114","115","116","117","118"],"import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport 'antd/dist/antd.css'\r\nimport axios from 'axios'\r\nimport { Slider } from 'antd'\r\nimport Select from 'react-select'\r\nimport { api } from '../../utils/api'\r\nimport { useForm } from 'react-hook-form'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Icon } from 'react-icons-kit'\r\nimport { ic_add } from 'react-icons-kit/md'\r\n\r\n// Create modals\r\nimport QualificationModal from '../modal/Qualification'\r\n\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PartnerPreference = ({ email }) => {\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    // Qualification modal states\r\n    const [showQualification, setShowQualification] = useState(false)\r\n    const [isQualificationCreated, setQualificationCreated] = useState(false)\r\n\r\n    // Input States\r\n    const [ageRange, setAgeRange] = useState({ startFrom: 18, endTo: 40 })\r\n    const [heightRange, setHeightRange] = useState({ startFrom: 4, endTo: 6 })\r\n    const [materialStatus, setMaterialStatus] = useState([])\r\n    const [religion, setReligion] = useState([])\r\n    const [socialOrder, setSocialOrder] = useState([])\r\n    const [motherTounge, setMotherTounge] = useState(null)\r\n    const [spokenLanguages, setSpokenLanguages] = useState([])\r\n    const [countries, setCountries] = useState([])\r\n\r\n    // Material Options\r\n    const materialStatusOptions = [\r\n        { label: 'Never married', value: 'never_married' },\r\n        { label: 'Divorced', value: 'divorced' },\r\n        { label: 'Annulled', value: 'annulled' },\r\n        { label: 'Widowed', value: 'widowed' }\r\n    ]\r\n\r\n    // Options states\r\n    const [religionOptions, setReligionOptions] = useState([])\r\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\r\n    const [languageOptions, setLanguageOptions] = useState([])\r\n    const [countryOptions, setCountryOptions] = useState([])\r\n    const [qualificationOptions, setQualificationOptions] = useState([])\r\n    const dietOptions = [\r\n        { label: 'Open to all', value: 'open_to_all' },\r\n        { label: 'veg', value: 'veg' },\r\n        { label: 'non-veg', value: 'non-veg' },\r\n        { label: 'vegan', value: 'vegan' }\r\n    ]\r\n    const bloodGroupOptions = [\r\n        { label: 'A(+ev)', value: 'A(+ev)' },\r\n        { label: 'A(-ev)', value: 'A(-ev)' },\r\n        { label: 'B(+ev)', value: 'B(+ev)' },\r\n        { label: 'B(-ev)', value: 'B(-ev)' },\r\n        { label: 'AB(+ev)', value: 'AB(+ev)' },\r\n        { label: 'AB(-ev)', value: 'AB(-ev)' },\r\n        { label: 'O(+ev)', value: 'O(+ev)' },\r\n        { label: 'O(-ev)', value: 'O(-ev)' },\r\n    ]\r\n    const healthInfOptions = [\r\n        { label: 'No Health Problem', value: 'No Health Problem' },\r\n        { label: 'HIV positive', value: 'HIV positive' },\r\n        { label: 'Diabetes', value: 'Diabetes' },\r\n        { label: 'Low BP', value: 'Low BP' },\r\n        { label: 'Hight BP', value: 'Hight BP' },\r\n        { label: 'Heart Aliments)', value: 'ABHeart Aliments' },\r\n        { label: 'Other', value: 'Other' },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // Get Religion\r\n        const getPartnerPreferenceInfo = async () => {\r\n            try {\r\n                const response = await axios.get(`${api}admin/user/partner-preference/info`)\r\n                setReligionOptions(response.data.religions.map(religion => ({ label: religion, value: religion })))\r\n                setSocialOrderOptions(response.data.socialOrders.map(order => ({ label: order, value: order })))\r\n                setLanguageOptions(response.data.languages.map(language => ({ label: language, value: language })))\r\n                setCountryOptions(response.data.countries.map(country => ({ label: country, value: country })))\r\n                console.log(response.data)\r\n\r\n            } catch (error) {\r\n                if (error) {\r\n                    toast.warn(error.response.data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        getPartnerPreferenceInfo()\r\n        getQualification()\r\n    }, [])\r\n\r\n    // On Change methods\r\n    const onAfterAgeChange = value => setAgeRange({ startFrom: value[0], endTo: value[1] })\r\n    const onAfterHeightChange = value => setHeightRange({ startFrom: value[0], endTo: value[1] })\r\n    const onChangeMaterialStatus = event => setMaterialStatus({ value: event })\r\n    const onChangeReligion = event => setReligion({ value: event })\r\n    const onChangeSocialOrder = event => setSocialOrder({ value: event })\r\n    const onChangeMotherTounge = event => setMotherTounge(event.value)\r\n    const onChangeSpokenLanguages = event => setSpokenLanguages({ value: event })\r\n    const onChangeCountries = event => setCountries({ value: event })\r\n\r\n    // Get Qualification\r\n    const getQualification = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/qualification`)\r\n            if (response.status === 200) {\r\n                setQualificationOptions(response.data.qualifications.map(qualification => ({ label: qualification.title, value: qualification.title })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Qualification\r\n    const createQualification = async (data) => {\r\n        try {\r\n            setQualificationCreated(true)\r\n            const response = await axios.post(`${api}admin/qualification/store`, data)\r\n            if (response.status === 201) {\r\n                getQualification()\r\n                setQualificationCreated(false)\r\n                setShowQualification(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setQualificationCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Submit data to API\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            setLoading(true)\r\n            const newData = {\r\n                ...data,\r\n                ageRange,\r\n                heightRange,\r\n                materialStatus: materialStatus.value ? materialStatus.value.map(data => data.value) : null,\r\n                religion: religion.value ? religion.value.map(data => data.value) : null,\r\n                socialOrder: socialOrder.value ? socialOrder.value.map(data => data.value) : null,\r\n                motherTounge,\r\n                spokenLanguages: spokenLanguages.value ? spokenLanguages.value.map(data => data.value) : null,\r\n                country: countries.value ? countries.value.map(data => data.value) : null\r\n            }\r\n\r\n            console.log(newData)\r\n            setTimeout(() => setLoading(false), 1000)\r\n        } catch (error) {\r\n            if (error) console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"partner-preference\">\r\n            <div className=\"card border-0 my-lg-4\">\r\n                <div className=\"card-header bg-white\">\r\n                    <h6 className=\"mb-0\">Partner preference</h6>\r\n                </div>\r\n                <div className=\"card-body p-4\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"row\">\r\n\r\n                            {/* Age Range */}\r\n                            <div className=\"col-12 col-lg-6\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Age range ({ageRange.startFrom}-{ageRange.endTo})</p>\r\n                                    <Slider\r\n                                        range\r\n                                        min={18}\r\n                                        max={50}\r\n                                        defaultValue={[ageRange.startFrom, ageRange.endTo]}\r\n                                        onAfterChange={onAfterAgeChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Height Range */}\r\n                            <div className=\"col-12 col-lg-6\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Height range ({heightRange.startFrom}-{heightRange.endTo})</p>\r\n                                    <Slider\r\n                                        range\r\n                                        min={4}\r\n                                        max={7}\r\n                                        defaultValue={[heightRange.startFrom, heightRange.endTo]}\r\n                                        onAfterChange={onAfterHeightChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Material status */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Material status</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={materialStatusOptions}\r\n                                        onChange={onChangeMaterialStatus}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Religion */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Religion</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={religionOptions}\r\n                                        onChange={onChangeReligion}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Social order */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Social order</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={socialOrderOptions}\r\n                                        onChange={onChangeSocialOrder}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Mother tounge */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Mother tounge</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeMotherTounge}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Spoken language */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Spoken language</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeSpokenLanguages}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* partner location */}\r\n\r\n                            {/* Country */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Country</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeCountries}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* State / Division */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>State / Division</p>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"stateDevision\"\r\n                                        className=\"form-control shadow-none\"\r\n                                        placeholder=\"( Dhaka Rajshahi Dinajpur Mymensingh ...)\"\r\n                                        ref={register()}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* City */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>City</p>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"city\"\r\n                                        className=\"form-control shadow-none\"\r\n                                        placeholder=\"( Dhaka Rajshahi Dinajpur Mymensingh ...)\"\r\n                                        ref={register()}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-12\">\r\n                                <h6>Education & Profession</h6>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Qualification</p>\r\n\r\n                                    <div className=\"d-flex\">\r\n                                        <div className=\"flex-fill\">\r\n                                            <Select\r\n                                                classNamePrefix=\"custom-select\"\r\n                                                isMulti\r\n                                                styles={customStyles}\r\n                                                placeholder={'Select qualification'}\r\n                                                components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                                options={qualificationOptions}\r\n                                            // onChange={onChangeBirthCountry}\r\n                                            // defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"pl-2 pt-1\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                style={customStyles.smBtn}\r\n                                                className=\"btn shadow-none rounded-circle p-1\"\r\n                                                onClick={() => setShowQualification(true)}\r\n                                            >\r\n                                                <Icon icon={ic_add} size={22} />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Submit Button */}\r\n                            <div className=\"col-12 text-right\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn shadow-none\"\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? <span>Adding...</span> : <span>Submit</span>}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Qualification create modal */}\r\n            {showQualification ?\r\n                <QualificationModal\r\n                    show={showQualification}\r\n                    isCreate={isQualificationCreated}\r\n                    newdata={createQualification}\r\n                    onHide={() => setShowQualification(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PartnerPreference;\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: 42,\r\n        fontSize: 14,\r\n        color: '#000',\r\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\r\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\r\n        borderRadius: 0\r\n    })\r\n}",["119","120"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Qualification.js",[],{"ruleId":"121","severity":1,"message":"122","line":25,"column":8,"nodeType":"123","endLine":25,"endColumn":14,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":29,"column":8,"nodeType":"123","endLine":29,"endColumn":15,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":21,"column":22,"nodeType":"129","messageId":"130","endLine":21,"endColumn":31},{"ruleId":"127","severity":1,"message":"131","line":22,"column":12,"nodeType":"129","messageId":"130","endLine":22,"endColumn":21},{"ruleId":"127","severity":1,"message":"132","line":22,"column":23,"nodeType":"129","messageId":"130","endLine":22,"endColumn":33},{"ruleId":"127","severity":1,"message":"133","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":20},{"ruleId":"127","severity":1,"message":"134","line":21,"column":29,"nodeType":"129","messageId":"130","endLine":21,"endColumn":47},{"ruleId":"127","severity":1,"message":"135","line":22,"column":21,"nodeType":"129","messageId":"130","endLine":22,"endColumn":29},{"ruleId":"127","severity":1,"message":"136","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":26},{"ruleId":"127","severity":1,"message":"137","line":19,"column":37,"nodeType":"129","messageId":"130","endLine":19,"endColumn":43},{"ruleId":"127","severity":1,"message":"138","line":22,"column":12,"nodeType":"129","messageId":"130","endLine":22,"endColumn":29},{"ruleId":"127","severity":1,"message":"139","line":47,"column":11,"nodeType":"129","messageId":"130","endLine":47,"endColumn":22},{"ruleId":"127","severity":1,"message":"140","line":53,"column":11,"nodeType":"129","messageId":"130","endLine":53,"endColumn":28},{"ruleId":"127","severity":1,"message":"141","line":63,"column":11,"nodeType":"129","messageId":"130","endLine":63,"endColumn":27},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["147"],"no-unused-vars","'setUpdate' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'removeItem' is defined but never used.","'setSelectedHobbies' is assigned a value but never used.","'setEmpty' is assigned a value but never used.","'QualificationModal' is defined but never used.","'errors' is assigned a value but never used.","'showQualification' is assigned a value but never used.","'dietOptions' is assigned a value but never used.","'bloodGroupOptions' is assigned a value but never used.","'healthInfOptions' is assigned a value but never used.","no-native-reassign",["148"],"no-negated-in-lhs",["149"],{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchUsers, page]",{"range":"154","text":"155"},"Update the dependencies array to be: [email, fetchUser]",{"range":"156","text":"157"},[938,944],"[fetchUsers, page]",[1150,1157],"[email, fetchUser]"]
