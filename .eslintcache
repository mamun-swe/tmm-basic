[{"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js":"1","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js":"2","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js":"3","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js":"4","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js":"5","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js":"6","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js":"7","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js":"8","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js":"9","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js":"10","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js":"11","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js":"12","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js":"13","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js":"14","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js":"15","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js":"16","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js":"17","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js":"18","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js":"19","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js":"20","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js":"21","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js":"22","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js":"23","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js":"24","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Qualification.js":"25","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\WorkingWith.js":"26","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\ProfessionArea.js":"27"},{"size":160,"mtime":1611984454498,"results":"28","hashOfConfig":"29"},{"size":592,"mtime":1612072965756,"results":"30","hashOfConfig":"29"},{"size":8864,"mtime":1612334588767,"results":"31","hashOfConfig":"29"},{"size":715,"mtime":1612072965759,"results":"32","hashOfConfig":"29"},{"size":5083,"mtime":1612418660319,"results":"33","hashOfConfig":"29"},{"size":113,"mtime":1611984454502,"results":"34","hashOfConfig":"29"},{"size":335,"mtime":1612072965762,"results":"35","hashOfConfig":"29"},{"size":32027,"mtime":1612355128005,"results":"36","hashOfConfig":"29"},{"size":6538,"mtime":1612418660317,"results":"37","hashOfConfig":"29"},{"size":15237,"mtime":1611984454490,"results":"38","hashOfConfig":"29"},{"size":13160,"mtime":1612334588762,"results":"39","hashOfConfig":"29"},{"size":7010,"mtime":1612072965757,"results":"40","hashOfConfig":"29"},{"size":4632,"mtime":1611984454492,"results":"41","hashOfConfig":"29"},{"size":4539,"mtime":1611984454491,"results":"42","hashOfConfig":"29"},{"size":27432,"mtime":1612422487893,"results":"43","hashOfConfig":"29"},{"size":148,"mtime":1612009927090,"results":"44","hashOfConfig":"29"},{"size":6497,"mtime":1611984454494,"results":"45","hashOfConfig":"29"},{"size":2418,"mtime":1611984454496,"results":"46","hashOfConfig":"29"},{"size":4199,"mtime":1611984454497,"results":"47","hashOfConfig":"29"},{"size":2421,"mtime":1611984454494,"results":"48","hashOfConfig":"29"},{"size":2436,"mtime":1611984454495,"results":"49","hashOfConfig":"29"},{"size":2455,"mtime":1611984454494,"results":"50","hashOfConfig":"29"},{"size":2485,"mtime":1611984454495,"results":"51","hashOfConfig":"29"},{"size":2450,"mtime":1611984454496,"results":"52","hashOfConfig":"29"},{"size":2452,"mtime":1612351160196,"results":"53","hashOfConfig":"29"},{"size":2436,"mtime":1612418660318,"results":"54","hashOfConfig":"29"},{"size":2460,"mtime":1612422487894,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qcr6mu",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js",[],["114","115"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js",["116"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { api } from \"../../utils/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Images } from \"../../utils/Images\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { ic_create } from \"react-icons-kit/md\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Index = () => {\r\n    const refs = createRef();\r\n    const windowWidth = window.innerWidth;\r\n    const { register, handleSubmit } = useForm();\r\n    const [page, setPage] = useState(0);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n    const [filteredUsers, setFilteredUsers] = useState(users);\r\n    const fakeArr = [...Array(12).keys()]\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [page]);\r\n\r\n    // Fetch Users\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/user/index?_page=${page}&_limit=36`);\r\n            if (response.status === 200) {\r\n                setUsers([\r\n                    ...users,\r\n                    ...response.data.users\r\n                ]);\r\n                setFilteredUsers([\r\n                    ...users,\r\n                    ...response.data.users\r\n                ]);\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Submit to filter user\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            // Find from loaded data\r\n            const result = users.filter((x) => x.email.toLowerCase().includes(data.query.toLowerCase()));\r\n            if (result && result.length > 0) {\r\n                setFilteredUsers(result);\r\n            } else {\r\n                // Find from server\r\n                const serverResult = await axios.get(`${api}admin/user/search?query=${data.query\r\n                    }`);\r\n                if (serverResult.status === 200 && serverResult.data) {\r\n                    setFilteredUsers(serverResult.data);\r\n                } else {\r\n                    setFilteredUsers(result);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    // On change filter\r\n    const filterHandle = (event) => {\r\n        const value = event.target.value;\r\n        if (!value) {\r\n            setLoading(true);\r\n            fetchUsers();\r\n        }\r\n    };\r\n\r\n    // is loading from fetch API data\r\n    if (isLoading) {\r\n        return (<div className=\"users-index\">\r\n            <div className=\"container-fluid py-3 py-lg-4\">\r\n                <div className=\"row\"> {/* Search */}\r\n                    <div className=\"col-12 search-column\">\r\n                        <div className=\"card border-0\"></div>\r\n                    </div>\r\n\r\n                    {/* Users */}\r\n                    <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\r\n                        {\r\n                            fakeArr.map((i) => (<div className=\"card border-0\"\r\n                                key={i}>\r\n                                <div className=\"card-body text-center\">\r\n                                    <div className=\"photo-container rounded-circle\">\r\n                                        <Skeleton circle={true}\r\n                                            animation={true}\r\n                                            count={1}\r\n                                            width={90}\r\n                                            height={90} />\r\n                                    </div>\r\n                                    <div className=\"content-container\"\r\n                                        ref={refs}>\r\n                                        <Skeleton className=\"mb-1\"\r\n                                            animation={true}\r\n                                            count={1}\r\n                                            width={\r\n                                                refs.innerWidth\r\n                                            }\r\n                                            height={28} />\r\n                                        <Skeleton animation={true}\r\n                                            count={1}\r\n                                            width={\r\n                                                windowWidth > 576 ? 150 : 80\r\n                                            }\r\n                                            height={20} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>))\r\n                        } </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (<div className=\"users-index\">\r\n        <div className=\"container-fluid py-3 py-lg-4\">\r\n            <div className=\"row\"> {/* Search */}\r\n                <div className=\"col-12 search-column\">\r\n                    <div className=\"text-center\">\r\n                        <h3 className=\"mb-3\">{users.length}Users</h3>\r\n                    </div>\r\n\r\n                    <div className=\"card border-0\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-fill\">\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"query\"\r\n                                            className=\"form-control shadow-none border-0\"\r\n                                            placeholder=\"Search user by e-mail\"\r\n                                            ref={register()}\r\n                                            onChange={filterHandle}\r\n                                        />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Users */}\r\n                <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\r\n                    <InfiniteScroll\r\n                        dataLength={filteredUsers.length}\r\n                        next={() => setPage(page + 1)}\r\n                        hasMore={true}\r\n                    >\r\n                        {filteredUsers && filteredUsers.length > 0 ?\r\n                            (filteredUsers.map((user, i) => (\r\n                                <div className=\"card border-0\" key={i}>\r\n                                    <div className=\"card-body text-center\">\r\n                                        <div className=\"photo-container rounded-circle\">\r\n                                            <img\r\n                                                src={user.profilePicture.clearImage ? user.profilePicture.clearImage : Images.Blank}\r\n                                                className=\"img-fluid\"\r\n                                                alt=\"...\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"content-container\">\r\n                                            <h6 className=\"text-capitalize\">{user.name ? user.name : null}</h6>\r\n                                            <p> {user.email ? user.email : null}</p>\r\n                                        </div>\r\n                                        <Link to={`/users/${user.email}/edit`}\r\n                                            type=\"button\"\r\n                                            className=\"btn shadow-none rounded-circle\">\r\n                                            <Icon icon={ic_create} size={20} />\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                            ) : (\r\n                                <div className=\"text-center four-o-four py-4\">\r\n                                    <img\r\n                                        src={Images.NoData}\r\n                                        className=\"img-fluid\"\r\n                                        alt=\"...\"\r\n                                    />\r\n                                    <h5>Not data found !!</h5>\r\n                                </div>)\r\n                        } </InfiniteScroll>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\nexport default Index;\r\n","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js",["117","118","119","120","121","122","123","124","125","126"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js",["127","128","129"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport Icon from 'react-icons-kit'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport BranchCreateModal from '../../components/modal/Branch'\r\nimport ReligionCreateModal from '../../components/modal/Religion'\r\nimport SocialOrderCreateModal from '../../components/modal/SocialOrder'\r\nimport CountryCreateModal from '../../components/modal/Country'\r\nimport LanguageCreateModal from '../../components/modal/Language'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PrimaryInfo = ({ email, user, updated }) => {\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const [isUpdate, setUpdate] = useState(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    // Input states\r\n    const [branch, setBranch] = useState({ value: null, error: null })\r\n    const [religion, setReligion] = useState({ value: null, error: null })\r\n    const [socialOrder, setSocialOrder] = useState({ value: null, error: null })\r\n    const [birthCountry, setBirthCountry] = useState({ value: null, error: null })\r\n    const [livingCountry, setLivingCountry] = useState({ value: null })\r\n    const [motherTongue, setMotherTongue] = useState({ value: null, error: null })\r\n    const [spokenLanguage, setSpokenLanguage] = useState({ value: [], error: null })\r\n\r\n    // Branch states\r\n    const [isBranchShow, setBranchShow] = useState(false)\r\n    const [isBranchCreated, setBranchCreated] = useState(false)\r\n    const [branchOptions, setBranchOptions] = useState([])\r\n\r\n    // Religion states\r\n    const [serverReligions, setServerReligions] = useState([])\r\n    const [religionOptions, setReligionOptions] = useState([])\r\n    const [isReligionShow, setReligionShow] = useState(false)\r\n    const [isCreateReligion, setCreateReligion] = useState(false)\r\n\r\n    // Social order states\r\n    const [isSocialOrderShow, setSocialOrderShow] = useState(false)\r\n    const [isCreateSocialOrder, setCreateSocialOrder] = useState(false)\r\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\r\n\r\n    // Country states\r\n    const [isCountryShow, setCountryShow] = useState(false)\r\n    const [isCountryCreate, setCountryCreate] = useState(false)\r\n    const [countryOptions, setCountryOptions] = useState([])\r\n\r\n    // Language states\r\n    const [isLanguageShow, setLanguageShow] = useState(false)\r\n    const [isLanguageCreated, setLanguageCreated] = useState(false)\r\n    const [languageOptions, setLanguageOptions] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        getReligion()\r\n        getCountry()\r\n        getBranches()\r\n        getLanguage()\r\n    }, [])\r\n\r\n    // onChange branch\r\n    const onChangeBranch = event => setBranch({ value: event.value, error: null })\r\n\r\n    // onChange religion\r\n    const onChangeReligion = event => {\r\n        setReligion({ value: event.value, error: null })\r\n        // Find single religion\r\n        const singleReligion = serverReligions.find(religion => religion.name === event.value)\r\n        // Set to social orders\r\n        setSocialOrderOptions(singleReligion.socialOrders.map(data => ({ label: data, value: data })))\r\n    }\r\n\r\n    // OnChange social order\r\n    const onChangeSocialOrder = event => setSocialOrder({ value: event.value, error: null })\r\n\r\n    // OnChange Birth Country\r\n    const onChangeBirthCountry = event => setBirthCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Living Country\r\n    const onChangeLivingCountry = event => setLivingCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Mother Toungue\r\n    const onChangeMotherTongue = event => setMotherTongue({ value: event.value, error: null })\r\n\r\n    // OnChange Spoken Language\r\n    const onChangeSpokenLanguage = event => setSpokenLanguage({ value: event, error: null })\r\n\r\n\r\n    // Get Branch\r\n    const getBranches = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/branch`)\r\n            if (response.status === 200) {\r\n                setBranchOptions(response.data.branches.map(branch => ({ label: branch.name, value: branch._id })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Branch\r\n    const createBranch = async (data) => {\r\n        try {\r\n            setBranchCreated(true)\r\n            const response = await axios.post(`${api}admin/branch`, data)\r\n            if (response.status === 201) {\r\n                getBranches()\r\n                setBranchCreated(false)\r\n                setBranchShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setBranchCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Religion\r\n    const getReligion = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/religion`)\r\n            setServerReligions(response.data.religions)\r\n            setReligionOptions(response.data.religions.map(data => ({ label: data.name, value: data.name })))\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Religion\r\n    const createReligion = async (data) => {\r\n        try {\r\n            setCreateReligion(true)\r\n            const response = await axios.post(`${api}admin/religion`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Social Order\r\n    const createSocialOrder = async (data) => {\r\n        try {\r\n            setCreateSocialOrder(true)\r\n            const response = await axios.post(`${api}admin/religion/socialorder`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateSocialOrder(false)\r\n                setSocialOrderShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateSocialOrder(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Country\r\n    const getCountry = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/country`)\r\n            if (response.status === 200) {\r\n                setCountryOptions(response.data.countries.map(country => ({ label: country.name, value: country.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Country\r\n    const createCountry = async (data) => {\r\n        try {\r\n            setCountryCreate(true)\r\n            const response = await axios.post(`${api}admin/country`, data)\r\n            if (response.status === 201) {\r\n                getCountry()\r\n                setCountryCreate(false)\r\n                setCountryShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCountryCreate(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Language\r\n    const getLanguage = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/language/index`)\r\n            if (response.status === 200) {\r\n                setLanguageOptions(response.data.languages.map(language => ({ label: language.name, value: language.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) console.log(error.response)\r\n        }\r\n    }\r\n\r\n    // Create Language\r\n    const createLanguage = async (data) => {\r\n        try {\r\n            setLanguageCreated(true)\r\n            const response = await axios.post(`${api}admin/language/store`, data)\r\n            if (response.status === 201) {\r\n                getLanguage()\r\n                setLanguageCreated(false)\r\n                setLanguageShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setLanguageCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Submit Registration Data\r\n    const onSubmit = async (data) => {\r\n\r\n        // Check Branch\r\n        if (!branch.value) return setBranch({ error: true })\r\n\r\n        // Check Religion\r\n        if (!religion.value) return setReligion({ error: true })\r\n\r\n        // Check Social Order\r\n        if (!socialOrder.value) return setSocialOrder({ error: true })\r\n\r\n        // Check Birth Country\r\n        if (!birthCountry.value) return setBirthCountry({ error: true })\r\n\r\n        // Check Mother Toungue\r\n        if (!motherTongue.value) return setMotherTongue({ error: true })\r\n\r\n        const regData = {\r\n            ...data,\r\n            branch: branch.value,\r\n            religion: religion.value,\r\n            socialOrder: socialOrder.value,\r\n            birthCountry: birthCountry.value,\r\n            livingCountry: livingCountry.value ? livingCountry.value : null,\r\n            motherTongue: motherTongue.value,\r\n            spokenLanguage: spokenLanguage.value ? spokenLanguage.value : null\r\n        }\r\n\r\n        console.log(regData)\r\n        updated(true)\r\n        // setUpdate(true)\r\n        // toast.success('Successfully account updated.')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Form 1 */}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"row\">\r\n                    {/* Branch */}\r\n                    <div className=\"col-12 col-lg-4 ml-auto\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {branch.error ?\r\n                                <small className=\"text-danger\">Branch is required.</small>\r\n                                : <small>Branch</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select branch'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={branchOptions}\r\n                                        onChange={onChangeBranch}\r\n                                    // defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setBranchShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {/* Name */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.name && errors.name.message ? (\r\n                                <small className=\"text-danger\">{errors.name && errors.name.message}</small>\r\n                            ) : <small>Name</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                defaultValue={user.name ? user.name : null}\r\n                                className={errors.name ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"Your name\"\r\n                                ref={register({\r\n                                    required: \"Name is required.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Minimun length 5 character.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Phone */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.phone && errors.phone.message ? (\r\n                                <small className=\"text-danger\">{errors.phone && errors.phone.message}</small>\r\n                            ) : <small>Phone number</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                defaultValue={user.phone ? user.phone : null}\r\n                                className={errors.phone ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"( 01X-XXXX-XXXX )\"\r\n                                ref={register({\r\n                                    required: \"Phone number is required.\",\r\n                                    pattern: {\r\n                                        value: /^\\(?([0-9]{3})\\)?([0-9]{8})$/,\r\n                                        message: \"Number isn't valid.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* E-mail */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>E-mail</small>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled\r\n                                defaultValue={user.email ? user.email : null}\r\n                                className=\"form-control shadow-none\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Gender */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.gender && errors.gender.message ? (\r\n                                <small className=\"text-danger\">{errors.gender && errors.gender.message}</small>\r\n                            ) : <small>Gender</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"gender\"\r\n                                className={errors.gender ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Gender is required.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Looking For */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.lookingFor && errors.lookingFor.message ? (\r\n                                <small className=\"text-danger\">{errors.lookingFor && errors.lookingFor.message}</small>\r\n                            ) : <small>Looking for</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"lookingFor\"\r\n                                className={errors.lookingFor ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Select what you want.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"groom\">Groom</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* DOB */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.dob && errors.dob.message ? (\r\n                                <small className=\"text-danger\">{errors.dob && errors.dob.message}</small>\r\n                            ) : <small>Date of birth</small>\r\n                            }\r\n\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                className={errors.dob ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Date of birth is required\"\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Religion */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"form-group mb-4\">\r\n                            {religion.error ?\r\n                                <small className=\"text-danger\">Religion is required.</small>\r\n                                : <small>Religion</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select religion'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={religionOptions}\r\n                                        onChange={onChangeReligion}\r\n                                    // defaultOptions={{ value: user.religion, label: user.religion }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setReligionShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Social order */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {socialOrder.error ?\r\n                                <small className=\"text-danger\">Social order is required.</small>\r\n                                : <small>Social order</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={socialOrderOptions}\r\n                                        onChange={onChangeSocialOrder}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setSocialOrderShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Birth Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {birthCountry.error ?\r\n                                <small className=\"text-danger\">Birth country is required.</small>\r\n                                : <small>Birth country</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select birth country'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeBirthCountry}\r\n                                        defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Living Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Living country</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeLivingCountry}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Mother tounge  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {motherTongue.error ?\r\n                                <small className=\"text-danger\">Mother toungue is required.</small>\r\n                                : <small>Mother tounge</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select mother tounge'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeMotherTongue}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Spoken language  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Spoken language</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        placeholder={'Select spoken language'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeSpokenLanguage}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Submit Button */}\r\n                <div className=\"text-right\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn shadow-none\"\r\n                        disabled={isUpdate}\r\n                    >\r\n                        {isUpdate ? <span>Updating...</span> : <span>Update</span>}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            {/* Modals */}\r\n\r\n            {/* Branch create modal */}\r\n            {isBranchShow ?\r\n                <BranchCreateModal\r\n                    show={isBranchShow}\r\n                    newdata={createBranch}\r\n                    countries={countryOptions}\r\n                    isCreate={isBranchCreated}\r\n                    onHide={() => setBranchShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Religion create modal */}\r\n            {isReligionShow ?\r\n                <ReligionCreateModal\r\n                    show={isReligionShow}\r\n                    newdata={createReligion}\r\n                    isCreate={isCreateReligion}\r\n                    onHide={() => setReligionShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Social order create modal */}\r\n            {isSocialOrderShow ?\r\n                <SocialOrderCreateModal\r\n                    show={isSocialOrderShow}\r\n                    religions={religionOptions}\r\n                    newdata={createSocialOrder}\r\n                    isCreate={isCreateSocialOrder}\r\n                    onHide={() => setSocialOrderShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Country create modal */}\r\n            {isCountryShow ?\r\n                <CountryCreateModal\r\n                    show={isCountryShow}\r\n                    newdata={createCountry}\r\n                    isCreate={isCountryCreate}\r\n                    onHide={() => setCountryShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Language create modal  */}\r\n            {isLanguageShow ?\r\n                <LanguageCreateModal\r\n                    show={isLanguageShow}\r\n                    newdata={createLanguage}\r\n                    isCreate={isLanguageCreated}\r\n                    onHide={() => setLanguageShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrimaryInfo;\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: 42,\r\n        fontSize: 14,\r\n        color: '#000',\r\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\r\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\r\n        borderRadius: 0\r\n    }),\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js",["130","131","132"],"import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Icon from 'react-icons-kit'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nimport HobbiCreateModal from '../modal/Hobbi'\r\n\r\nimport { removeItem } from '../../utils/helpers'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PersonalActivities = ({ email, activities }) => {\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [hobbies, setHobbies] = useState([])\r\n\r\n    // Input states\r\n    const [selectedHobbies, setSelectedHobbies] = useState([])\r\n    const [isEmpty, setEmpty] = useState(false)\r\n\r\n    // Hobbi create states\r\n    const [show, setShow] = useState(false)\r\n    const [created, setCreated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchHobbi()\r\n    }, [])\r\n\r\n    // Handle hobbie\r\n    // const handleHobbie = event => {\r\n    //     const newHobbi = event.target.value\r\n    // const exHobbie = selectedHobbies.find((hobbi) => hobbi === newHobbi)\r\n    // if (exHobbie) {\r\n    //     const newArr = selectedHobbies.filter(e => e !== newHobbi)\r\n    //     return setSelectedHobbies(newArr)\r\n    // }\r\n    // setSelectedHobbies([...selectedHobbies, newHobbi])\r\n    // }\r\n\r\n    // Fetch Hobbi\r\n    const fetchHobbi = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/activity/index`)\r\n            if (response.status === 200) {\r\n                setHobbies(response.data.activities.hobbies)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Hobbi\r\n    const createHobbi = async (data) => {\r\n        try {\r\n            setCreated(true)\r\n            const response = await axios.post(`${api}admin/activity/store/hobbi`, data)\r\n            if (response.status === 201) {\r\n                fetchHobbi()\r\n                setCreated(false)\r\n                setShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Add hobbi\r\n    const addHobbi = async () => {\r\n        try {\r\n            console.log(selectedHobbies)\r\n            // console.log(activities.hobbies)\r\n            // setSelectedHobbies([...selectedHobbies, activities.hobbies])\r\n            // console.log(selectedHobbies)\r\n\r\n            // if (!selectedHobbies.length) return setEmpty(true)\r\n            // const data = { email: email, hobbies: selectedHobbies }\r\n\r\n            // setLoading(true)\r\n            // const response = await axios.put(`${api}admin/user/profile/activity?field=hobbies`, data)\r\n            // if (response.status === 201) {\r\n            //     setLoading(false)\r\n            //     toast.success(response.data.message)\r\n            // }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setLoading(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Active sellected options\r\n    const checkedHobbi = hobbi => {\r\n        if (activities) {\r\n            const activity = activities.hobbies.find(data => data === hobbi)\r\n            if (activity)\r\n                return activity\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggleCheckbox = event => {\r\n        const item = event.target.value\r\n\r\n        // setSelectedHobbies(activities.hobbies)\r\n        console.log(item);\r\n\r\n        // const isAvailable = selectedHobbies.find(oldItem => oldItem === item)\r\n        // if (isAvailable) {\r\n        //     const freshItems = removeItem(selectedHobbies, item)\r\n        //     setSelectedHobbies(freshItems)\r\n        // } else {\r\n        //     setSelectedHobbies([...selectedHobbies, item])\r\n        // }\r\n\r\n\r\n      \r\n\r\n\r\n        // const exHobbie = selectedHobbies.find((hobbi) => hobbi === item)\r\n        // if (exHobbie) {\r\n        //     const index = selectedHobbies.indexOf(item)\r\n        //     if (index > -1) { selectedHobbies.splice(index, 1) }\r\n        // }\r\n        // setSelectedHobbies([...selectedHobbies, item])\r\n\r\n        // console.log(selectedHobbies);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {/* Section header */}\r\n            <div className=\"section-header d-flex mb-3\">\r\n                <div className=\"pr-3\">\r\n                    <button\r\n                        type=\"button\"\r\n                        style={customStyles.smBtn}\r\n                        className=\"btn shadow-none rounded-circle p-1\"\r\n                        onClick={() => setShow(true)}\r\n                    >\r\n                        <Icon icon={ic_add} size={22} />\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <p className=\"section-title\">\r\n                        {isEmpty ? <span className=\"text-danger\">Please select hobbies</span> : <span>Hobbies</span>}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Section body */}\r\n            <div className=\"section-body\">\r\n                <div className=\"row\">\r\n                    {hobbies && hobbies.map((hobbie, i) =>\r\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\r\n                            <Form.Group controlId={i}>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label={hobbie}\r\n                                    value={hobbie}\r\n                                    onChange={toggleCheckbox}\r\n                                    defaultChecked={checkedHobbi(hobbie)}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    )}\r\n\r\n                    {hobbies && hobbies.length ?\r\n                        <div className=\"col-12 text-right\">\r\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addHobbi} disabled={isLoading}>\r\n                                {isLoading ? <span>Adding...</span> : <span>Add Hobbies</span>}\r\n                            </button>\r\n                        </div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modals */}\r\n            {/* Hobbi Create */}\r\n            {show ?\r\n                <HobbiCreateModal\r\n                    show={show}\r\n                    newdata={createHobbi}\r\n                    isCreate={created}\r\n                    onHide={() => setShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalActivities;\r\n\r\nconst customStyles = {\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js",["133","134","135","136"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Qualification.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\WorkingWith.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\ProfessionArea.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":25,"column":8,"nodeType":"143","endLine":25,"endColumn":14,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":11,"column":8,"nodeType":"147","messageId":"148","endLine":11,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":12,"column":8,"nodeType":"147","messageId":"148","endLine":12,"endColumn":32},{"ruleId":"145","severity":1,"message":"150","line":13,"column":8,"nodeType":"147","messageId":"148","endLine":13,"endColumn":35},{"ruleId":"145","severity":1,"message":"151","line":14,"column":8,"nodeType":"147","messageId":"148","endLine":14,"endColumn":29},{"ruleId":"145","severity":1,"message":"152","line":15,"column":8,"nodeType":"147","messageId":"148","endLine":15,"endColumn":17},{"ruleId":"145","severity":1,"message":"153","line":16,"column":8,"nodeType":"147","messageId":"148","endLine":16,"endColumn":20},{"ruleId":"145","severity":1,"message":"154","line":17,"column":8,"nodeType":"147","messageId":"148","endLine":17,"endColumn":17},{"ruleId":"145","severity":1,"message":"155","line":23,"column":12,"nodeType":"147","messageId":"148","endLine":23,"endColumn":16},{"ruleId":"141","severity":1,"message":"156","line":29,"column":8,"nodeType":"143","endLine":29,"endColumn":15,"suggestions":"157"},{"ruleId":"145","severity":1,"message":"158","line":49,"column":11,"nodeType":"147","messageId":"148","endLine":49,"endColumn":18},{"ruleId":"145","severity":1,"message":"159","line":21,"column":22,"nodeType":"147","messageId":"148","endLine":21,"endColumn":31},{"ruleId":"145","severity":1,"message":"160","line":22,"column":12,"nodeType":"147","messageId":"148","endLine":22,"endColumn":21},{"ruleId":"145","severity":1,"message":"161","line":22,"column":23,"nodeType":"147","messageId":"148","endLine":22,"endColumn":33},{"ruleId":"145","severity":1,"message":"162","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":20},{"ruleId":"145","severity":1,"message":"163","line":21,"column":29,"nodeType":"147","messageId":"148","endLine":21,"endColumn":47},{"ruleId":"145","severity":1,"message":"164","line":22,"column":21,"nodeType":"147","messageId":"148","endLine":22,"endColumn":29},{"ruleId":"145","severity":1,"message":"165","line":21,"column":37,"nodeType":"147","messageId":"148","endLine":21,"endColumn":43},{"ruleId":"145","severity":1,"message":"166","line":63,"column":11,"nodeType":"147","messageId":"148","endLine":63,"endColumn":22},{"ruleId":"145","severity":1,"message":"167","line":69,"column":11,"nodeType":"147","messageId":"148","endLine":69,"endColumn":28},{"ruleId":"145","severity":1,"message":"168","line":79,"column":11,"nodeType":"147","messageId":"148","endLine":79,"endColumn":27},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["171"],"no-unused-vars","'PrimaryInfoForm' is defined but never used.","Identifier","unusedVar","'PictureAndDescUpdateForm' is defined but never used.","'BasicAndLifestyleUpdateForm' is defined but never used.","'ContactInfoCreateForm' is defined but never used.","'HobbiForm' is defined but never used.","'InterestForm' is defined but never used.","'MusicForm' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["172"],"'reFetch' is assigned a value but never used.","'setUpdate' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'removeItem' is defined but never used.","'setSelectedHobbies' is assigned a value but never used.","'setEmpty' is assigned a value but never used.","'errors' is assigned a value but never used.","'dietOptions' is assigned a value but never used.","'bloodGroupOptions' is assigned a value but never used.","'healthInfOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [fetchUsers, page]",{"range":"177","text":"178"},"Update the dependencies array to be: [email, fetchUser]",{"range":"179","text":"180"},[938,944],"[fetchUsers, page]",[1150,1157],"[email, fetchUser]"]