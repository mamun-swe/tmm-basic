<<<<<<< HEAD
[{"/home/mamun/Downloads/works/tmm/user-reg-app/src/index.js":"1","/home/mamun/Downloads/works/tmm/user-reg-app/src/App.js":"2","/home/mamun/Downloads/works/tmm/user-reg-app/src/pages/users/Index.js":"3","/home/mamun/Downloads/works/tmm/user-reg-app/src/pages/users/Edit.js":"4","/home/mamun/Downloads/works/tmm/user-reg-app/src/pages/fourOfour/Index.js":"5","/home/mamun/Downloads/works/tmm/user-reg-app/src/utils/api.js":"6","/home/mamun/Downloads/works/tmm/user-reg-app/src/utils/Images.js":"7","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/PrimaryInfo.js":"8","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/ProfilePictureDescription.js":"9","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/BasicAndLifestyle.js":"10","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/ContactInformation.js":"11","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/Hobbi.js":"12","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/Interests.js":"13","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/FavouriteMusic.js":"14","/home/mamun/Downloads/works/tmm/user-reg-app/src/utils/helpers.js":"15","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Branch.js":"16","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Religion.js":"17","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/SocialOrder.js":"18","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Country.js":"19","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Language.js":"20","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Hobbi.js":"21","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Interest.js":"22","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Music.js":"23","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/PartnerPreference.js":"24"},{"size":152,"mtime":1611230335281,"results":"25","hashOfConfig":"26"},{"size":570,"mtime":1612068997675,"results":"27","hashOfConfig":"26"},{"size":8662,"mtime":1612246649109,"results":"28","hashOfConfig":"26"},{"size":4883,"mtime":1612263620212,"results":"29","hashOfConfig":"26"},{"size":693,"mtime":1612069457128,"results":"30","hashOfConfig":"26"},{"size":112,"mtime":1611555889122,"results":"31","hashOfConfig":"26"},{"size":321,"mtime":1612069023419,"results":"32","hashOfConfig":"26"},{"size":31301,"mtime":1612168253129,"results":"33","hashOfConfig":"26"},{"size":6331,"mtime":1612168692721,"results":"34","hashOfConfig":"26"},{"size":14939,"mtime":1611827429068,"results":"35","hashOfConfig":"26"},{"size":12930,"mtime":1612248824156,"results":"36","hashOfConfig":"26"},{"size":6798,"mtime":1612070084570,"results":"37","hashOfConfig":"26"},{"size":4492,"mtime":1611830959818,"results":"38","hashOfConfig":"26"},{"size":4399,"mtime":1611830408626,"results":"39","hashOfConfig":"26"},{"size":141,"mtime":1611998092061,"results":"40","hashOfConfig":"26"},{"size":6334,"mtime":1611651737610,"results":"41","hashOfConfig":"26"},{"size":2351,"mtime":1611575551351,"results":"42","hashOfConfig":"26"},{"size":4087,"mtime":1611579234000,"results":"43","hashOfConfig":"26"},{"size":2354,"mtime":1611640375974,"results":"44","hashOfConfig":"26"},{"size":2369,"mtime":1611657866995,"results":"45","hashOfConfig":"26"},{"size":2388,"mtime":1611826556691,"results":"46","hashOfConfig":"26"},{"size":2418,"mtime":1611826803244,"results":"47","hashOfConfig":"26"},{"size":2383,"mtime":1611830378398,"results":"48","hashOfConfig":"26"},{"size":12245,"mtime":1612344730255,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"fgya9c",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mamun/Downloads/works/tmm/user-reg-app/src/index.js",[],["103","104"],"/home/mamun/Downloads/works/tmm/user-reg-app/src/App.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/pages/users/Index.js",["105"],"import React, { createRef, useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport axios from \"axios\";\nimport Icon from \"react-icons-kit\";\nimport { api } from \"../../utils/api\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { Images } from \"../../utils/Images\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { ic_create } from \"react-icons-kit/md\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Index = () => {\n    const refs = createRef();\n    const windowWidth = window.innerWidth;\n    const { register, handleSubmit } = useForm();\n    const [page, setPage] = useState(0);\n    const [isLoading, setLoading] = useState(true);\n    const [users, setUsers] = useState([]);\n    const [filteredUsers, setFilteredUsers] = useState(users);\n    const fakeArr = [...Array(12).keys()]\n\n    useEffect(() => {\n        fetchUsers();\n    }, [page]);\n\n    // Fetch Users\n    const fetchUsers = async () => {\n        try {\n            const response = await axios.get(`${api}admin/user/index?_page=${page}&_limit=36`);\n            if (response.status === 200) {\n                setUsers([\n                    ...users,\n                    ...response.data.users\n                ]);\n                setFilteredUsers([\n                    ...users,\n                    ...response.data.users\n                ]);\n                setLoading(false)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response);\n            }\n        }\n    };\n\n    // Submit to filter user\n    const onSubmit = async (data) => {\n        try {\n            // Find from loaded data\n            const result = users.filter((x) => x.email.toLowerCase().includes(data.query.toLowerCase()));\n            if (result && result.length > 0) {\n                setFilteredUsers(result);\n            } else {\n                // Find from server\n                const serverResult = await axios.get(`${api}admin/user/search?query=${data.query\n                    }`);\n                if (serverResult.status === 200 && serverResult.data) {\n                    setFilteredUsers(serverResult.data);\n                } else {\n                    setFilteredUsers(result);\n                }\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response);\n            }\n        }\n    };\n\n    // On change filter\n    const filterHandle = (event) => {\n        const value = event.target.value;\n        if (!value) {\n            setLoading(true);\n            fetchUsers();\n        }\n    };\n\n    // is loading from fetch API data\n    if (isLoading) {\n        return (<div className=\"users-index\">\n            <div className=\"container-fluid py-3 py-lg-4\">\n                <div className=\"row\"> {/* Search */}\n                    <div className=\"col-12 search-column\">\n                        <div className=\"card border-0\"></div>\n                    </div>\n\n                    {/* Users */}\n                    <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\n                        {\n                            fakeArr.map((i) => (<div className=\"card border-0\"\n                                key={i}>\n                                <div className=\"card-body text-center\">\n                                    <div className=\"photo-container rounded-circle\">\n                                        <Skeleton circle={true}\n                                            animation={true}\n                                            count={1}\n                                            width={90}\n                                            height={90} />\n                                    </div>\n                                    <div className=\"content-container\"\n                                        ref={refs}>\n                                        <Skeleton className=\"mb-1\"\n                                            animation={true}\n                                            count={1}\n                                            width={\n                                                refs.innerWidth\n                                            }\n                                            height={28} />\n                                        <Skeleton animation={true}\n                                            count={1}\n                                            width={\n                                                windowWidth > 576 ? 150 : 80\n                                            }\n                                            height={20} />\n                                    </div>\n                                </div>\n                            </div>))\n                        } </div>\n                </div>\n            </div>\n        </div>);\n    }\n\n    return (<div className=\"users-index\">\n        <div className=\"container-fluid py-3 py-lg-4\">\n            <div className=\"row\"> {/* Search */}\n                <div className=\"col-12 search-column\">\n                    <div className=\"text-center\">\n                        <h3 className=\"mb-3\">{users.length}Users</h3>\n                    </div>\n\n                    <div className=\"card border-0\">\n                        <div className=\"d-flex\">\n                            <div className=\"flex-fill\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"query\"\n                                            className=\"form-control shadow-none border-0\"\n                                            placeholder=\"Search user by e-mail\"\n                                            ref={register()}\n                                            onChange={filterHandle}\n                                        />\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Users */}\n                <div className=\"col-12 px-2 profile-column\"> {/* User Card */}\n                    <InfiniteScroll\n                        dataLength={filteredUsers.length}\n                        next={() => setPage(page + 1)}\n                        hasMore={true}\n                    >\n                        {filteredUsers && filteredUsers.length > 0 ?\n                            (filteredUsers.map((user, i) => (\n                                <div className=\"card border-0\" key={i}>\n                                    <div className=\"card-body text-center\">\n                                        <div className=\"photo-container rounded-circle\">\n                                            <img\n                                                src={user.profilePicture.clearImage ? user.profilePicture.clearImage : Images.Blank}\n                                                className=\"img-fluid\"\n                                                alt=\"...\"\n                                            />\n                                        </div>\n                                        <div className=\"content-container\">\n                                            <h6 className=\"text-capitalize\">{user.name ? user.name : null}</h6>\n                                            <p> {user.email ? user.email : null}</p>\n                                        </div>\n                                        <Link to={`/users/${user.email}/edit`}\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\">\n                                            <Icon icon={ic_create} size={20} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            ))\n                            ) : (\n                                <div className=\"text-center four-o-four py-4\">\n                                    <img\n                                        src={Images.NoData}\n                                        className=\"img-fluid\"\n                                        alt=\"...\"\n                                    />\n                                    <h5>Not data found !!</h5>\n                                </div>)\n                        } </InfiniteScroll>\n                </div>\n            </div>\n        </div>\n    </div>);\n};\n\nexport default Index;\n","/home/mamun/Downloads/works/tmm/user-reg-app/src/pages/users/Edit.js",["106"],"import React, { useState, useEffect } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport { Images } from '../../utils/Images'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Link, useParams } from 'react-router-dom'\n\n\nimport PrimaryInfoForm from '../../components/forms/PrimaryInfo'\nimport PictureAndDescUpdateForm from '../../components/forms/ProfilePictureDescription'\nimport BasicAndLifestyleUpdateForm from '../../components/forms/BasicAndLifestyle'\nimport ContactInfoCreateForm from '../../components/forms/ContactInformation'\nimport HobbiForm from '../../components/forms/Hobbi'\nimport InterestForm from '../../components/forms/Interests'\nimport MusicForm from '../../components/forms/FavouriteMusic'\nimport PartnerPreferenceForm from '../../components/forms/PartnerPreference'\n\ntoast.configure({ autoClose: 2000 })\nconst Edit = () => {\n    const { email } = useParams()\n    const [user, setUser] = useState({})\n    const [isLoading, setLoading] = useState(true)\n\n\n    useEffect(() => {\n        fetchUser()\n    }, [email])\n\n    // Fetch User\n    const fetchUser = async () => {\n        try {\n            const response = await axios.get(`${api}admin/user/show/${email}`)\n            if (response.status === 200) {\n                setLoading(false)\n                setUser(response.data.user)\n                console.log(response.data.user)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n                // toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // re fetch data after updated\n    const reFetch = data => {\n        if (data) {\n            fetchUser()\n        }\n    }\n\n    // if loading\n    if (isLoading)\n        return (<div>\n            <p>Loading...</p>\n        </div>)\n\n\n    return (<div className=\"user-edit\">\n        <div className=\"card\">\n            <div className=\"card-header bg-white p-4\">\n                <div className=\"d-flex\">\n                    <div>\n                        <h4 className=\"mb-0\">User Edit</h4>\n                        <p className=\"mb-0\">\n                            <Link to=\"/\">Go Back</Link>\n                            to see registered users.</p>\n                    </div>\n                    <div className=\"ml-auto\">\n                        <img src={\n                            Images.Logo\n                        }\n                            className=\"img-fluid\"\n                            alt=\"Company logo\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-body p-4\">\n                {/* Primary info */}\n                <PrimaryInfoForm\n                    email={email}\n                    user={user}\n                    updated={reFetch}\n                />\n            </div>\n        </div>\n\n        {/* Profile Picture & Description form */}\n        <PictureAndDescUpdateForm\n            email={email}\n            profileimages={user.profilePicture ? user.profilePicture : null}\n            olddescription={user.shortDescription ? user.shortDescription : null}\n            updated={reFetch}\n        />\n\n        {/* Basic and lifestyle information form */}\n        <BasicAndLifestyleUpdateForm\n            email={email}\n            basicandlifeinfo={user.basicAndLifestyleInformation ? user.basicAndLifestyleInformation : null}\n        />\n\n        {/* Contact information form */}\n        <ContactInfoCreateForm\n            email={email}\n            contact={user.contactInformation ? user.contactInformation : null}\n        />\n        {/* Personal activities */}\n        <div className=\"card my-lg-4\">\n            <div className=\"card-header bg-white\">\n                <h6 className=\"mb-0\">Personal Activities</h6>\n            </div>\n            <div className=\"card-body p-4\">\n                <div className=\"row\"> {/* Hobbi create form */}\n                    <div className=\"col-12 col-lg-6 pr-lg-4 border-bottom pb-4 mb-4\">\n                        <HobbiForm\n                            email={email}\n                            activities={user.personalActivities ? user.personalActivities : null}\n                        />\n                    </div>\n\n                    {/* Interests create form */}\n                    <div className=\"col-12 col-lg-6 pl-lg-4 border-bottom pb-4 mb-4\">\n                        <InterestForm email={email} />\n                    </div>\n\n                    {/* Music create form */}\n                    <div className=\"col-12 col-lg-6 pl-lg-4 border-bottom pb-4 mb-4\">\n                        <MusicForm email={email} />\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        {/* Partner preference */}\n        <PartnerPreferenceForm email={email} />\n\n    </div>);\n}\n\nexport default Edit;\n","/home/mamun/Downloads/works/tmm/user-reg-app/src/pages/fourOfour/Index.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/utils/api.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/utils/Images.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/PrimaryInfo.js",["107","108","109"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Select from 'react-select'\nimport Icon from 'react-icons-kit'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport { useForm } from 'react-hook-form'\nimport { ic_add } from 'react-icons-kit/md'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport BranchCreateModal from '../../components/modal/Branch'\nimport ReligionCreateModal from '../../components/modal/Religion'\nimport SocialOrderCreateModal from '../../components/modal/SocialOrder'\nimport CountryCreateModal from '../../components/modal/Country'\nimport LanguageCreateModal from '../../components/modal/Language'\n\ntoast.configure({ autoClose: 2000 })\nconst PrimaryInfo = ({ email, user, updated }) => {\n    const { register, handleSubmit, errors } = useForm()\n\n    const [isUpdate, setUpdate] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n\n    // Input states\n    const [branch, setBranch] = useState({ value: null, error: null })\n    const [religion, setReligion] = useState({ value: null, error: null })\n    const [socialOrder, setSocialOrder] = useState({ value: null, error: null })\n    const [birthCountry, setBirthCountry] = useState({ value: null, error: null })\n    const [livingCountry, setLivingCountry] = useState({ value: null })\n    const [motherTongue, setMotherTongue] = useState({ value: null, error: null })\n    const [spokenLanguage, setSpokenLanguage] = useState({ value: [], error: null })\n\n\n    // Branch states\n    const [isBranchShow, setBranchShow] = useState(false)\n    const [isBranchCreated, setBranchCreated] = useState(false)\n    const [branchOptions, setBranchOptions] = useState([])\n\n    // Religion states\n    const [serverReligions, setServerReligions] = useState([])\n    const [religionOptions, setReligionOptions] = useState([])\n    const [isReligionShow, setReligionShow] = useState(false)\n    const [isCreateReligion, setCreateReligion] = useState(false)\n\n    // Social order states\n    const [isSocialOrderShow, setSocialOrderShow] = useState(false)\n    const [isCreateSocialOrder, setCreateSocialOrder] = useState(false)\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\n\n    // Country states\n    const [isCountryShow, setCountryShow] = useState(false)\n    const [isCountryCreate, setCountryCreate] = useState(false)\n    const [countryOptions, setCountryOptions] = useState([])\n\n    // Language states\n    const [isLanguageShow, setLanguageShow] = useState(false)\n    const [isLanguageCreated, setLanguageCreated] = useState(false)\n    const [languageOptions, setLanguageOptions] = useState([])\n\n\n    useEffect(() => {\n        getReligion()\n        getCountry()\n        getBranches()\n        getLanguage()\n    }, [])\n\n    // onChange branch\n    const onChangeBranch = event => setBranch({ value: event.value, error: null })\n\n    // onChange religion\n    const onChangeReligion = event => {\n        setReligion({ value: event.value, error: null })\n        // Find single religion\n        const singleReligion = serverReligions.find(religion => religion.name === event.value)\n        // Set to social orders\n        setSocialOrderOptions(singleReligion.socialOrders.map(data => ({ label: data, value: data })))\n    }\n\n    // OnChange social order\n    const onChangeSocialOrder = event => setSocialOrder({ value: event.value, error: null })\n\n    // OnChange Birth Country\n    const onChangeBirthCountry = event => setBirthCountry({ value: event.value, error: null })\n\n    // OnChange Living Country\n    const onChangeLivingCountry = event => setLivingCountry({ value: event.value, error: null })\n\n    // OnChange Mother Toungue\n    const onChangeMotherTongue = event => setMotherTongue({ value: event.value, error: null })\n\n    // OnChange Spoken Language\n    const onChangeSpokenLanguage = event => setSpokenLanguage({ value: event, error: null })\n\n\n    // Get Branch\n    const getBranches = async () => {\n        try {\n            const response = await axios.get(`${api}admin/branch`)\n            if (response.status === 200) {\n                setBranchOptions(response.data.branches.map(branch => ({ label: branch.name, value: branch._id })))\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n\n    // Create Branch\n    const createBranch = async (data) => {\n        try {\n            setBranchCreated(true)\n            const response = await axios.post(`${api}admin/branch`, data)\n            if (response.status === 201) {\n                getBranches()\n                setBranchCreated(false)\n                setBranchShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setBranchCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Get Religion\n    const getReligion = async () => {\n        try {\n            const response = await axios.get(`${api}admin/religion`)\n            setServerReligions(response.data.religions)\n            setReligionOptions(response.data.religions.map(data => ({ label: data.name, value: data.name })))\n        } catch (error) {\n            if (error) {\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Create Religion\n    const createReligion = async (data) => {\n        try {\n            setCreateReligion(true)\n            const response = await axios.post(`${api}admin/religion`, data)\n            if (response.status === 201) {\n                getReligion()\n                setCreateReligion(false)\n                setReligionShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreateReligion(false)\n                setReligionShow(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Create Social Order\n    const createSocialOrder = async (data) => {\n        try {\n            setCreateSocialOrder(true)\n            const response = await axios.post(`${api}admin/religion/socialorder`, data)\n            if (response.status === 201) {\n                getReligion()\n                setCreateSocialOrder(false)\n                setSocialOrderShow(false)\n                toast.success(response.data.message)\n            }\n\n        } catch (error) {\n            if (error) {\n                setCreateSocialOrder(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Get Country\n    const getCountry = async () => {\n        try {\n            const response = await axios.get(`${api}admin/country`)\n            if (response.status === 200) {\n                setCountryOptions(response.data.countries.map(country => ({ label: country.name, value: country.name })))\n            }\n        } catch (error) {\n            if (error) {\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Create Country\n    const createCountry = async (data) => {\n        try {\n            setCountryCreate(true)\n            const response = await axios.post(`${api}admin/country`, data)\n            if (response.status === 201) {\n                getCountry()\n                setCountryCreate(false)\n                setCountryShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCountryCreate(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Get Language\n    const getLanguage = async () => {\n        try {\n            const response = await axios.get(`${api}admin/language/index`)\n            if (response.status === 200) {\n                setLanguageOptions(response.data.languages.map(language => ({ label: language.name, value: language.name })))\n            }\n        } catch (error) {\n            if (error) console.log(error.response)\n        }\n    }\n\n    // Create Language\n    const createLanguage = async (data) => {\n        try {\n            setLanguageCreated(true)\n            const response = await axios.post(`${api}admin/language/store`, data)\n            if (response.status === 201) {\n                getLanguage()\n                setLanguageCreated(false)\n                setLanguageShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setLanguageCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n\n    // Submit Registration Data\n    const onSubmit = async (data) => {\n\n        // Check Branch\n        if (!branch.value) return setBranch({ error: true })\n\n        // Check Religion\n        if (!religion.value) return setReligion({ error: true })\n\n        // Check Social Order\n        if (!socialOrder.value) return setSocialOrder({ error: true })\n\n        // Check Birth Country\n        if (!birthCountry.value) return setBirthCountry({ error: true })\n\n        // Check Mother Toungue\n        if (!motherTongue.value) return setMotherTongue({ error: true })\n\n        const regData = {\n            ...data,\n            branch: branch.value,\n            religion: religion.value,\n            socialOrder: socialOrder.value,\n            birthCountry: birthCountry.value,\n            livingCountry: livingCountry.value ? livingCountry.value : null,\n            motherTongue: motherTongue.value,\n            spokenLanguage: spokenLanguage.value ? spokenLanguage.value : null\n        }\n\n        console.log(regData)\n        updated(true)\n        // setUpdate(true)\n        // toast.success('Successfully account updated.')\n    }\n\n\n    return (\n        <div>\n            {/* Form 1 */}\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n                <div className=\"row\">\n                    {/* Branch */}\n                    <div className=\"col-12 col-lg-4 ml-auto\">\n                        <div className=\"form-group mb-4\">\n                            {branch.error ?\n                                <small className=\"text-danger\">Branch is required.</small>\n                                : <small>Branch</small>\n                            }\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        classNamePrefix=\"custom-select\"\n                                        styles={customStyles}\n                                        placeholder={'Select branch'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={branchOptions}\n                                        onChange={onChangeBranch}\n                                    // defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setBranchShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n\n                    {/* Name */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {errors.name && errors.name.message ? (\n                                <small className=\"text-danger\">{errors.name && errors.name.message}</small>\n                            ) : <small>Name</small>\n                            }\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                defaultValue={user.name ? user.name : null}\n                                className={errors.name ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\n                                placeholder=\"Your name\"\n                                ref={register({\n                                    required: \"Name is required.\",\n                                    minLength: {\n                                        value: 5,\n                                        message: \"Minimun length 5 character.\"\n                                    }\n                                })}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Phone */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {errors.phone && errors.phone.message ? (\n                                <small className=\"text-danger\">{errors.phone && errors.phone.message}</small>\n                            ) : <small>Phone number</small>\n                            }\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                defaultValue={user.phone ? user.phone : null}\n                                className={errors.phone ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\n                                placeholder=\"( 01X-XXXX-XXXX )\"\n                                ref={register({\n                                    required: \"Phone number is required.\",\n                                    pattern: {\n                                        value: /^\\(?([0-9]{3})\\)?([0-9]{8})$/,\n                                        message: \"Number isn't valid.\"\n                                    }\n                                })}\n                            />\n                        </div>\n                    </div>\n\n                    {/* E-mail */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            <small>E-mail</small>\n                            <input\n                                type=\"text\"\n                                disabled\n                                defaultValue={user.email ? user.email : null}\n                                className=\"form-control shadow-none\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Gender */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {errors.gender && errors.gender.message ? (\n                                <small className=\"text-danger\">{errors.gender && errors.gender.message}</small>\n                            ) : <small>Gender</small>\n                            }\n\n                            <select\n                                name=\"gender\"\n                                className={errors.gender ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\n                                ref={register({\n                                    required: \"Gender is required.\"\n                                })}\n                            >\n                                <option value=\"male\">Male</option>\n                                <option value=\"female\">Female</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    {/* Looking For */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {errors.lookingFor && errors.lookingFor.message ? (\n                                <small className=\"text-danger\">{errors.lookingFor && errors.lookingFor.message}</small>\n                            ) : <small>Looking for</small>\n                            }\n\n                            <select\n                                name=\"lookingFor\"\n                                className={errors.lookingFor ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\n                                ref={register({\n                                    required: \"Select what you want.\"\n                                })}\n                            >\n                                <option value=\"groom\">Groom</option>\n                                <option value=\"female\">Female</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    {/* DOB */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {errors.dob && errors.dob.message ? (\n                                <small className=\"text-danger\">{errors.dob && errors.dob.message}</small>\n                            ) : <small>Date of birth</small>\n                            }\n\n                            <input\n                                type=\"date\"\n                                name=\"dob\"\n                                className={errors.dob ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\n                                ref={register({\n                                    required: \"Date of birth is required\"\n                                })}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Religion */}\n                    <div className=\"col-12 col-lg-4\">\n\n                        <div className=\"form-group mb-4\">\n                            {religion.error ?\n                                <small className=\"text-danger\">Religion is required.</small>\n                                : <small>Religion</small>\n                            }\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        classNamePrefix=\"custom-select\"\n                                        styles={customStyles}\n                                        placeholder={'Select religion'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={religionOptions}\n                                        onChange={onChangeReligion}\n                                    // defaultOptions={{ value: user.religion, label: user.religion }}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setReligionShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Social order */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {socialOrder.error ?\n                                <small className=\"text-danger\">Social order is required.</small>\n                                : <small>Social order</small>\n                            }\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        classNamePrefix=\"custom-select\"\n                                        styles={customStyles}\n                                        placeholder={'Social order'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={socialOrderOptions}\n                                        onChange={onChangeSocialOrder}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setSocialOrderShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Birth Country */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {birthCountry.error ?\n                                <small className=\"text-danger\">Birth country is required.</small>\n                                : <small>Birth country</small>\n                            }\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        classNamePrefix=\"custom-select\"\n                                        styles={customStyles}\n                                        placeholder={'Select birth country'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={countryOptions}\n                                        onChange={onChangeBirthCountry}\n                                        defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setCountryShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Living Country */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            <small>Living country</small>\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        classNamePrefix=\"custom-select\"\n                                        styles={customStyles}\n                                        placeholder={'Social order'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={countryOptions}\n                                        onChange={onChangeLivingCountry}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setCountryShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Mother tounge  */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            {motherTongue.error ?\n                                <small className=\"text-danger\">Mother toungue is required.</small>\n                                : <small>Mother tounge</small>\n                            }\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        classNamePrefix=\"custom-select\"\n                                        styles={customStyles}\n                                        placeholder={'Select mother tounge'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={languageOptions}\n                                        onChange={onChangeMotherTongue}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setLanguageShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Spoken language  */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                            <small>Spoken language</small>\n\n                            <div className=\"d-flex\">\n                                <div className=\"flex-fill\">\n                                    <Select\n                                        isMulti\n                                        styles={customStyles}\n                                        classNamePrefix=\"custom-select\"\n                                        placeholder={'Select spoken language'}\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                        options={languageOptions}\n                                        onChange={onChangeSpokenLanguage}\n                                    />\n                                </div>\n                                <div className=\"pl-2 pt-1\">\n                                    <button\n                                        type=\"button\"\n                                        style={customStyles.smBtn}\n                                        className=\"btn shadow-none rounded-circle p-1\"\n                                        onClick={() => setLanguageShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                {/* Submit Button */}\n                <div className=\"text-right\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn shadow-none\"\n                        disabled={isUpdate}\n                    >\n                        {isUpdate ? <span>Updating...</span> : <span>Update</span>}\n                    </button>\n                </div>\n            </form>\n\n\n\n\n\n\n            {/* Modals */}\n\n            {/* Branch create modal */}\n            {isBranchShow ?\n                <BranchCreateModal\n                    show={isBranchShow}\n                    newdata={createBranch}\n                    countries={countryOptions}\n                    isCreate={isBranchCreated}\n                    onHide={() => setBranchShow(false)}\n                />\n                : null}\n\n            {/* Religion create modal */}\n            {isReligionShow ?\n                <ReligionCreateModal\n                    show={isReligionShow}\n                    newdata={createReligion}\n                    isCreate={isCreateReligion}\n                    onHide={() => setReligionShow(false)}\n                />\n                : null}\n\n            {/* Social order create modal */}\n            {isSocialOrderShow ?\n                <SocialOrderCreateModal\n                    show={isSocialOrderShow}\n                    religions={religionOptions}\n                    newdata={createSocialOrder}\n                    isCreate={isCreateSocialOrder}\n                    onHide={() => setSocialOrderShow(false)}\n                />\n                : null}\n\n            {/* Country create modal */}\n            {isCountryShow ?\n                <CountryCreateModal\n                    show={isCountryShow}\n                    newdata={createCountry}\n                    isCreate={isCountryCreate}\n                    onHide={() => setCountryShow(false)}\n                />\n                : null}\n\n            {/* Language create modal  */}\n            {isLanguageShow ?\n                <LanguageCreateModal\n                    show={isLanguageShow}\n                    newdata={createLanguage}\n                    isCreate={isLanguageCreated}\n                    onHide={() => setLanguageShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default PrimaryInfo;\n\nconst customStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: 42,\n        fontSize: 14,\n        color: '#000',\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\n        borderRadius: 0\n    }),\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/ProfilePictureDescription.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/BasicAndLifestyle.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/ContactInformation.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/Hobbi.js",["110","111","112"],"import React, { useEffect, useState } from 'react'\nimport './style.scss'\nimport axios from 'axios'\nimport { api } from '../../utils/api'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Icon from 'react-icons-kit'\nimport { ic_add } from 'react-icons-kit/md'\nimport { Form } from 'react-bootstrap'\n\nimport HobbiCreateModal from '../modal/Hobbi'\n\nimport { removeItem } from '../../utils/helpers'\n\ntoast.configure({ autoClose: 2000 })\nconst PersonalActivities = ({ email, activities }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [hobbies, setHobbies] = useState([])\n\n    // Input states\n    const [selectedHobbies, setSelectedHobbies] = useState([])\n    const [isEmpty, setEmpty] = useState(false)\n\n    // Hobbi create states\n    const [show, setShow] = useState(false)\n    const [created, setCreated] = useState(false)\n\n    useEffect(() => {\n        fetchHobbi()\n    }, [])\n\n    // Handle hobbie\n    // const handleHobbie = event => {\n    //     const newHobbi = event.target.value\n    // const exHobbie = selectedHobbies.find((hobbi) => hobbi === newHobbi)\n    // if (exHobbie) {\n    //     const newArr = selectedHobbies.filter(e => e !== newHobbi)\n    //     return setSelectedHobbies(newArr)\n    // }\n    // setSelectedHobbies([...selectedHobbies, newHobbi])\n    // }\n\n    // Fetch Hobbi\n    const fetchHobbi = async () => {\n        try {\n            const response = await axios.get(`${api}admin/activity/index`)\n            if (response.status === 200) {\n                setHobbies(response.data.activities.hobbies)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n\n    // Create Hobbi\n    const createHobbi = async (data) => {\n        try {\n            setCreated(true)\n            const response = await axios.post(`${api}admin/activity/store/hobbi`, data)\n            if (response.status === 201) {\n                fetchHobbi()\n                setCreated(false)\n                setShow(false)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                setCreated(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n\n    // Add hobbi\n    const addHobbi = async () => {\n        try {\n            console.log(selectedHobbies)\n            // console.log(activities.hobbies)\n            // setSelectedHobbies([...selectedHobbies, activities.hobbies])\n            // console.log(selectedHobbies)\n\n            // if (!selectedHobbies.length) return setEmpty(true)\n            // const data = { email: email, hobbies: selectedHobbies }\n\n            // setLoading(true)\n            // const response = await axios.put(`${api}admin/user/profile/activity?field=hobbies`, data)\n            // if (response.status === 201) {\n            //     setLoading(false)\n            //     toast.success(response.data.message)\n            // }\n\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                toast.warn(error.response.data.message)\n            }\n        }\n    }\n\n    // Active sellected options\n    const checkedHobbi = hobbi => {\n        if (activities) {\n            const activity = activities.hobbies.find(data => data === hobbi)\n            if (activity)\n                return activity\n            return false\n        }\n\n    }\n\n\n    const toggleCheckbox = event => {\n        const item = event.target.value\n\n        // setSelectedHobbies(activities.hobbies)\n        console.log(item);\n\n        // const isAvailable = selectedHobbies.find(oldItem => oldItem === item)\n        // if (isAvailable) {\n        //     const freshItems = removeItem(selectedHobbies, item)\n        //     setSelectedHobbies(freshItems)\n        // } else {\n        //     setSelectedHobbies([...selectedHobbies, item])\n        // }\n\n\n      \n\n\n        // const exHobbie = selectedHobbies.find((hobbi) => hobbi === item)\n        // if (exHobbie) {\n        //     const index = selectedHobbies.indexOf(item)\n        //     if (index > -1) { selectedHobbies.splice(index, 1) }\n        // }\n        // setSelectedHobbies([...selectedHobbies, item])\n\n        // console.log(selectedHobbies);\n    }\n\n\n    return (\n        <div className=\"section\">\n            {/* Section header */}\n            <div className=\"section-header d-flex mb-3\">\n                <div className=\"pr-3\">\n                    <button\n                        type=\"button\"\n                        style={customStyles.smBtn}\n                        className=\"btn shadow-none rounded-circle p-1\"\n                        onClick={() => setShow(true)}\n                    >\n                        <Icon icon={ic_add} size={22} />\n                    </button>\n                </div>\n                <div>\n                    <p className=\"section-title\">\n                        {isEmpty ? <span className=\"text-danger\">Please select hobbies</span> : <span>Hobbies</span>}\n                    </p>\n                </div>\n            </div>\n\n            {/* Section body */}\n            <div className=\"section-body\">\n                <div className=\"row\">\n                    {hobbies && hobbies.map((hobbie, i) =>\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\n                            <Form.Group controlId={i}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={hobbie}\n                                    value={hobbie}\n                                    onChange={toggleCheckbox}\n                                    defaultChecked={checkedHobbi(hobbie)}\n                                />\n                            </Form.Group>\n                        </div>\n                    )}\n\n                    {hobbies && hobbies.length ?\n                        <div className=\"col-12 text-right\">\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addHobbi} disabled={isLoading}>\n                                {isLoading ? <span>Adding...</span> : <span>Add Hobbies</span>}\n                            </button>\n                        </div>\n                        : null}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {/* Hobbi Create */}\n            {show ?\n                <HobbiCreateModal\n                    show={show}\n                    newdata={createHobbi}\n                    isCreate={created}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n        </div>\n    );\n}\n\nexport default PersonalActivities;\n\nconst customStyles = {\n    smBtn: {\n        width: 33,\n        height: 34,\n    }\n}","/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/Interests.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/FavouriteMusic.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/utils/helpers.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Branch.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Religion.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/SocialOrder.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Country.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Language.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Hobbi.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Interest.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/modal/Music.js",[],"/home/mamun/Downloads/works/tmm/user-reg-app/src/components/forms/PartnerPreference.js",["113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":25,"column":8,"nodeType":"124","endLine":25,"endColumn":14,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":29,"column":8,"nodeType":"124","endLine":29,"endColumn":15,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":21,"column":22,"nodeType":"130","messageId":"131","endLine":21,"endColumn":31},{"ruleId":"128","severity":1,"message":"132","line":22,"column":12,"nodeType":"130","messageId":"131","endLine":22,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":22,"column":23,"nodeType":"130","messageId":"131","endLine":22,"endColumn":33},{"ruleId":"128","severity":1,"message":"134","line":13,"column":10,"nodeType":"130","messageId":"131","endLine":13,"endColumn":20},{"ruleId":"128","severity":1,"message":"135","line":21,"column":29,"nodeType":"130","messageId":"131","endLine":21,"endColumn":47},{"ruleId":"128","severity":1,"message":"136","line":22,"column":21,"nodeType":"130","messageId":"131","endLine":22,"endColumn":29},{"ruleId":"128","severity":1,"message":"137","line":14,"column":13,"nodeType":"130","messageId":"131","endLine":14,"endColumn":21},{"ruleId":"128","severity":1,"message":"138","line":14,"column":37,"nodeType":"130","messageId":"131","endLine":14,"endColumn":43},{"ruleId":"128","severity":1,"message":"139","line":44,"column":11,"nodeType":"130","messageId":"131","endLine":44,"endColumn":22},{"ruleId":"128","severity":1,"message":"140","line":52,"column":11,"nodeType":"130","messageId":"131","endLine":52,"endColumn":28},{"ruleId":"128","severity":1,"message":"141","line":64,"column":11,"nodeType":"130","messageId":"131","endLine":64,"endColumn":27},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["145"],"no-unused-vars","'setUpdate' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'removeItem' is defined but never used.","'setSelectedHobbies' is assigned a value but never used.","'setEmpty' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'dietOptions' is assigned a value but never used.","'bloodGroupOptions' is assigned a value but never used.","'healthInfOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [fetchUsers, page]",{"range":"150","text":"151"},"Update the dependencies array to be: [email, fetchUser]",{"range":"152","text":"153"},[914,920],"[fetchUsers, page]",[1122,1129],"[email, fetchUser]"]
=======
[{"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js":"1","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js":"2","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js":"3","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js":"4","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js":"5","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js":"6","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js":"7","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js":"8","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js":"9","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js":"10","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js":"11","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js":"12","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js":"13","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js":"14","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js":"15","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js":"16","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js":"17","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js":"18","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js":"19","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js":"20","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js":"21","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js":"22","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js":"23","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js":"24"},{"size":160,"mtime":1611984454498,"results":"25","hashOfConfig":"26"},{"size":592,"mtime":1612072965756,"results":"27","hashOfConfig":"26"},{"size":715,"mtime":1612072965759,"results":"28","hashOfConfig":"26"},{"size":5027,"mtime":1612334588765,"results":"29","hashOfConfig":"26"},{"size":8864,"mtime":1612334588767,"results":"30","hashOfConfig":"26"},{"size":335,"mtime":1612072965762,"results":"31","hashOfConfig":"26"},{"size":113,"mtime":1611984454502,"results":"32","hashOfConfig":"26"},{"size":32039,"mtime":1612170136256,"results":"33","hashOfConfig":"26"},{"size":6476,"mtime":1612170136257,"results":"34","hashOfConfig":"26"},{"size":15237,"mtime":1611984454490,"results":"35","hashOfConfig":"26"},{"size":13160,"mtime":1612334588762,"results":"36","hashOfConfig":"26"},{"size":7010,"mtime":1612072965757,"results":"37","hashOfConfig":"26"},{"size":4632,"mtime":1611984454492,"results":"38","hashOfConfig":"26"},{"size":4539,"mtime":1611984454491,"results":"39","hashOfConfig":"26"},{"size":148,"mtime":1612009927090,"results":"40","hashOfConfig":"26"},{"size":6497,"mtime":1611984454494,"results":"41","hashOfConfig":"26"},{"size":2418,"mtime":1611984454496,"results":"42","hashOfConfig":"26"},{"size":4199,"mtime":1611984454497,"results":"43","hashOfConfig":"26"},{"size":2421,"mtime":1611984454494,"results":"44","hashOfConfig":"26"},{"size":2436,"mtime":1611984454495,"results":"45","hashOfConfig":"26"},{"size":2455,"mtime":1611984454494,"results":"46","hashOfConfig":"26"},{"size":2485,"mtime":1611984454495,"results":"47","hashOfConfig":"26"},{"size":2450,"mtime":1611984454496,"results":"48","hashOfConfig":"26"},{"size":12374,"mtime":1612334588763,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"qcr6mu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\index.js",[],["105","106"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\App.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\fourOfour\\Index.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Edit.js",["107"],"import React, { useState, useEffect } from 'react'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport { Images } from '../../utils/Images'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n\r\nimport PrimaryInfoForm from '../../components/forms/PrimaryInfo'\r\nimport PictureAndDescUpdateForm from '../../components/forms/ProfilePictureDescription'\r\nimport BasicAndLifestyleUpdateForm from '../../components/forms/BasicAndLifestyle'\r\nimport ContactInfoCreateForm from '../../components/forms/ContactInformation'\r\nimport HobbiForm from '../../components/forms/Hobbi'\r\nimport InterestForm from '../../components/forms/Interests'\r\nimport MusicForm from '../../components/forms/FavouriteMusic'\r\nimport PartnerPreferenceForm from '../../components/forms/PartnerPreference'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst Edit = () => {\r\n    const { email } = useParams()\r\n    const [user, setUser] = useState({})\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUser()\r\n    }, [email])\r\n\r\n    // Fetch User\r\n    const fetchUser = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/user/show/${email}`)\r\n            if (response.status === 200) {\r\n                setLoading(false)\r\n                setUser(response.data.user)\r\n                console.log(response.data.user)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n                // toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // re fetch data after updated\r\n    const reFetch = data => {\r\n        if (data) {\r\n            fetchUser()\r\n        }\r\n    }\r\n\r\n    // if loading\r\n    if (isLoading)\r\n        return (<div>\r\n            <p>Loading...</p>\r\n        </div>)\r\n\r\n\r\n    return (<div className=\"user-edit\">\r\n        <div className=\"card\">\r\n            <div className=\"card-header bg-white p-4\">\r\n                <div className=\"d-flex\">\r\n                    <div>\r\n                        <h4 className=\"mb-0\">User Edit</h4>\r\n                        <p className=\"mb-0\">\r\n                            <Link to=\"/\">Go Back</Link>\r\n                            to see registered users.</p>\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                        <img src={\r\n                            Images.Logo\r\n                        }\r\n                            className=\"img-fluid\"\r\n                            alt=\"Company logo\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n                {/* Primary info */}\r\n                <PrimaryInfoForm\r\n                    email={email}\r\n                    user={user}\r\n                    updated={reFetch}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        {/* Profile Picture & Description form */}\r\n        <PictureAndDescUpdateForm\r\n            email={email}\r\n            profileimages={user.profilePicture ? user.profilePicture : null}\r\n            olddescription={user.shortDescription ? user.shortDescription : null}\r\n            updated={reFetch}\r\n        />\r\n\r\n        {/* Basic and lifestyle information form */}\r\n        <BasicAndLifestyleUpdateForm\r\n            email={email}\r\n            basicandlifeinfo={user.basicAndLifestyleInformation ? user.basicAndLifestyleInformation : null}\r\n        />\r\n\r\n        {/* Contact information form */}\r\n        <ContactInfoCreateForm\r\n            email={email}\r\n            contact={user.contactInformation ? user.contactInformation : null}\r\n        />\r\n        {/* Personal activities */}\r\n        <div className=\"card my-lg-4\">\r\n            <div className=\"card-header bg-white\">\r\n                <h6 className=\"mb-0\">Personal Activities</h6>\r\n            </div>\r\n            <div className=\"card-body p-4\">\r\n                <div className=\"row\"> {/* Hobbi create form */}\r\n                    <div className=\"col-12 col-lg-6 pr-lg-4 border-bottom pb-4 mb-4\">\r\n                        <HobbiForm\r\n                            email={email}\r\n                            activities={user.personalActivities ? user.personalActivities : null}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Interests create form */}\r\n                    <div className=\"col-12 col-lg-6 pl-lg-4 border-bottom pb-4 mb-4\">\r\n                        <InterestForm email={email} />\r\n                    </div>\r\n\r\n                    {/* Music create form */}\r\n                    <div className=\"col-12 col-lg-6 pl-lg-4 border-bottom pb-4 mb-4\">\r\n                        <MusicForm email={email} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Partner preference */}\r\n        <PartnerPreferenceForm email={email} />\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Edit;\r\n","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\pages\\users\\Index.js",["108"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { api } from \"../../utils/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Images } from \"../../utils/Images\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { ic_create } from \"react-icons-kit/md\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Index = () => {\r\n  const refs = createRef();\r\n  const windowWidth = window.innerWidth;\r\n  const { register, handleSubmit } = useForm();\r\n  const [page, setPage] = useState(0);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState(users);\r\n\r\n  const fakeArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [page]);\r\n\r\n  // Fetch Users\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${api}admin/user/index?_page=${page}&_limit=36`\r\n      );\r\n      if (response.status === 200) {\r\n        setUsers([...users, ...response.data.users]);\r\n        setFilteredUsers([...users, ...response.data.users]);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      if (error) {\r\n        console.log(error.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Submit to filter user\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      // Find from loaded data\r\n      const result = users.filter((x) =>\r\n        x.email.toLowerCase().includes(data.query.toLowerCase())\r\n      );\r\n      if (result && result.length > 0) {\r\n        setFilteredUsers(result);\r\n      } else {\r\n        // Find from server\r\n        const serverResult = await axios.get(\r\n          `${api}comments?&email=${data.query}`\r\n        );\r\n        if (serverResult.status === 200 && serverResult.data) {\r\n          setFilteredUsers(serverResult.data);\r\n        } else {\r\n          setFilteredUsers(result);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error) {\r\n        console.log(error.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  // On change filter\r\n  const filterHandle = (event) => {\r\n    const value = event.target.value;\r\n    if (!value) {\r\n      setLoading(true);\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n  // is loading from fetch API data\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"users-index\">\r\n        <div className=\"container-fluid py-3 py-lg-4\">\r\n          <div className=\"row\">\r\n            {/* Search */}\r\n            <div className=\"col-12 search-column\">\r\n              <div className=\"card border-0\"></div>\r\n            </div>\r\n\r\n            {/* Users */}\r\n            <div className=\"col-12 px-2 profile-column\">\r\n              {/* User Card */}\r\n              {fakeArr.map((i) => (\r\n                <div className=\"card border-0\" key={i}>\r\n                  <div className=\"card-body text-center\">\r\n                    <div className=\"photo-container rounded-circle\">\r\n                      <Skeleton\r\n                        circle={true}\r\n                        animation={true}\r\n                        count={1}\r\n                        width={90}\r\n                        height={90}\r\n                      />\r\n                    </div>\r\n                    <div className=\"content-container\" ref={refs}>\r\n                      <Skeleton\r\n                        className=\"mb-1\"\r\n                        animation={true}\r\n                        count={1}\r\n                        width={refs.innerWidth}\r\n                        height={28}\r\n                      />\r\n                      <Skeleton\r\n                        animation={true}\r\n                        count={1}\r\n                        width={windowWidth > 576 ? 150 : 80}\r\n                        height={20}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"users-index\">\r\n      <div className=\"container-fluid py-3 py-lg-4\">\r\n        <div className=\"row\">\r\n          {/* Search */}\r\n          <div className=\"col-12 search-column\">\r\n            <div className=\"text-center\">\r\n              <h3 className=\"mb-3\">{users.length} Users</h3>\r\n            </div>\r\n\r\n            <div className=\"card border-0\">\r\n              <div className=\"d-flex\">\r\n                <div className=\"flex-fill\">\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"query\"\r\n                        className=\"form-control shadow-none border-0\"\r\n                        placeholder=\"Search user by e-mail\"\r\n                        ref={register()}\r\n                        onChange={filterHandle}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Users */}\r\n          <div className=\"col-12 px-2 profile-column\">\r\n            {/* User Card */}\r\n            <InfiniteScroll\r\n              dataLength={filteredUsers.length}\r\n              next={() => setPage(page + 1)}\r\n              hasMore={true}\r\n            >\r\n              {filteredUsers && filteredUsers.length > 0 ? (\r\n                filteredUsers.map((user, i) => (\r\n                  <div className=\"card border-0\" key={i}>\r\n                    <div className=\"card-body text-center\">\r\n                      <div className=\"photo-container rounded-circle\">\r\n                        <img\r\n                          src={Images.User}\r\n                          className=\"img-fluid\"\r\n                          alt=\"...\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"content-container\">\r\n                        <h6 className=\"text-capitalize\">\r\n                          {user.name ? user.name : null}\r\n                        </h6>\r\n                        <p>{user.email ? user.email : null}</p>\r\n                      </div>\r\n                      <Link\r\n                        to={`/users/${user.email}/edit`}\r\n                        type=\"button\"\r\n                        className=\"btn shadow-none rounded-circle\"\r\n                      >\r\n                        <Icon icon={ic_create} size={20} />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"text-center four-o-four py-4\">\r\n                  <img src={Images.NoData} className=\"img-fluid\" alt=\"...\" />\r\n                  <h5>Not data found !!</h5>\r\n                </div>\r\n              )}\r\n            </InfiniteScroll>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\Images.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\api.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PrimaryInfo.js",["109","110","111"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport Icon from 'react-icons-kit'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport BranchCreateModal from '../../components/modal/Branch'\r\nimport ReligionCreateModal from '../../components/modal/Religion'\r\nimport SocialOrderCreateModal from '../../components/modal/SocialOrder'\r\nimport CountryCreateModal from '../../components/modal/Country'\r\nimport LanguageCreateModal from '../../components/modal/Language'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PrimaryInfo = ({ email, user, updated }) => {\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const [isUpdate, setUpdate] = useState(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    // Input states\r\n    const [branch, setBranch] = useState({ value: null, error: null })\r\n    const [religion, setReligion] = useState({ value: null, error: null })\r\n    const [socialOrder, setSocialOrder] = useState({ value: null, error: null })\r\n    const [birthCountry, setBirthCountry] = useState({ value: null, error: null })\r\n    const [livingCountry, setLivingCountry] = useState({ value: null })\r\n    const [motherTongue, setMotherTongue] = useState({ value: null, error: null })\r\n    const [spokenLanguage, setSpokenLanguage] = useState({ value: [], error: null })\r\n\r\n\r\n    // Branch states\r\n    const [isBranchShow, setBranchShow] = useState(false)\r\n    const [isBranchCreated, setBranchCreated] = useState(false)\r\n    const [branchOptions, setBranchOptions] = useState([])\r\n\r\n    // Religion states\r\n    const [serverReligions, setServerReligions] = useState([])\r\n    const [religionOptions, setReligionOptions] = useState([])\r\n    const [isReligionShow, setReligionShow] = useState(false)\r\n    const [isCreateReligion, setCreateReligion] = useState(false)\r\n\r\n    // Social order states\r\n    const [isSocialOrderShow, setSocialOrderShow] = useState(false)\r\n    const [isCreateSocialOrder, setCreateSocialOrder] = useState(false)\r\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\r\n\r\n    // Country states\r\n    const [isCountryShow, setCountryShow] = useState(false)\r\n    const [isCountryCreate, setCountryCreate] = useState(false)\r\n    const [countryOptions, setCountryOptions] = useState([])\r\n\r\n    // Language states\r\n    const [isLanguageShow, setLanguageShow] = useState(false)\r\n    const [isLanguageCreated, setLanguageCreated] = useState(false)\r\n    const [languageOptions, setLanguageOptions] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        getReligion()\r\n        getCountry()\r\n        getBranches()\r\n        getLanguage()\r\n    }, [])\r\n\r\n    // onChange branch\r\n    const onChangeBranch = event => setBranch({ value: event.value, error: null })\r\n\r\n    // onChange religion\r\n    const onChangeReligion = event => {\r\n        setReligion({ value: event.value, error: null })\r\n        // Find single religion\r\n        const singleReligion = serverReligions.find(religion => religion.name === event.value)\r\n        // Set to social orders\r\n        setSocialOrderOptions(singleReligion.socialOrders.map(data => ({ label: data, value: data })))\r\n    }\r\n\r\n    // OnChange social order\r\n    const onChangeSocialOrder = event => setSocialOrder({ value: event.value, error: null })\r\n\r\n    // OnChange Birth Country\r\n    const onChangeBirthCountry = event => setBirthCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Living Country\r\n    const onChangeLivingCountry = event => setLivingCountry({ value: event.value, error: null })\r\n\r\n    // OnChange Mother Toungue\r\n    const onChangeMotherTongue = event => setMotherTongue({ value: event.value, error: null })\r\n\r\n    // OnChange Spoken Language\r\n    const onChangeSpokenLanguage = event => setSpokenLanguage({ value: event, error: null })\r\n\r\n\r\n    // Get Branch\r\n    const getBranches = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/branch`)\r\n            if (response.status === 200) {\r\n                setBranchOptions(response.data.branches.map(branch => ({ label: branch.name, value: branch._id })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Branch\r\n    const createBranch = async (data) => {\r\n        try {\r\n            setBranchCreated(true)\r\n            const response = await axios.post(`${api}admin/branch`, data)\r\n            if (response.status === 201) {\r\n                getBranches()\r\n                setBranchCreated(false)\r\n                setBranchShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setBranchCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Religion\r\n    const getReligion = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/religion`)\r\n            setServerReligions(response.data.religions)\r\n            setReligionOptions(response.data.religions.map(data => ({ label: data.name, value: data.name })))\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Religion\r\n    const createReligion = async (data) => {\r\n        try {\r\n            setCreateReligion(true)\r\n            const response = await axios.post(`${api}admin/religion`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateReligion(false)\r\n                setReligionShow(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Social Order\r\n    const createSocialOrder = async (data) => {\r\n        try {\r\n            setCreateSocialOrder(true)\r\n            const response = await axios.post(`${api}admin/religion/socialorder`, data)\r\n            if (response.status === 201) {\r\n                getReligion()\r\n                setCreateSocialOrder(false)\r\n                setSocialOrderShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreateSocialOrder(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Country\r\n    const getCountry = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/country`)\r\n            if (response.status === 200) {\r\n                setCountryOptions(response.data.countries.map(country => ({ label: country.name, value: country.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Country\r\n    const createCountry = async (data) => {\r\n        try {\r\n            setCountryCreate(true)\r\n            const response = await axios.post(`${api}admin/country`, data)\r\n            if (response.status === 201) {\r\n                getCountry()\r\n                setCountryCreate(false)\r\n                setCountryShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCountryCreate(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get Language\r\n    const getLanguage = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/language/index`)\r\n            if (response.status === 200) {\r\n                setLanguageOptions(response.data.languages.map(language => ({ label: language.name, value: language.name })))\r\n            }\r\n        } catch (error) {\r\n            if (error) console.log(error.response)\r\n        }\r\n    }\r\n\r\n    // Create Language\r\n    const createLanguage = async (data) => {\r\n        try {\r\n            setLanguageCreated(true)\r\n            const response = await axios.post(`${api}admin/language/store`, data)\r\n            if (response.status === 201) {\r\n                getLanguage()\r\n                setLanguageCreated(false)\r\n                setLanguageShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setLanguageCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Submit Registration Data\r\n    const onSubmit = async (data) => {\r\n\r\n        // Check Branch\r\n        if (!branch.value) return setBranch({ error: true })\r\n\r\n        // Check Religion\r\n        if (!religion.value) return setReligion({ error: true })\r\n\r\n        // Check Social Order\r\n        if (!socialOrder.value) return setSocialOrder({ error: true })\r\n\r\n        // Check Birth Country\r\n        if (!birthCountry.value) return setBirthCountry({ error: true })\r\n\r\n        // Check Mother Toungue\r\n        if (!motherTongue.value) return setMotherTongue({ error: true })\r\n\r\n        const regData = {\r\n            ...data,\r\n            branch: branch.value,\r\n            religion: religion.value,\r\n            socialOrder: socialOrder.value,\r\n            birthCountry: birthCountry.value,\r\n            livingCountry: livingCountry.value ? livingCountry.value : null,\r\n            motherTongue: motherTongue.value,\r\n            spokenLanguage: spokenLanguage.value ? spokenLanguage.value : null\r\n        }\r\n\r\n        console.log(regData)\r\n        updated(true)\r\n        // setUpdate(true)\r\n        // toast.success('Successfully account updated.')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Form 1 */}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"row\">\r\n                    {/* Branch */}\r\n                    <div className=\"col-12 col-lg-4 ml-auto\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {branch.error ?\r\n                                <small className=\"text-danger\">Branch is required.</small>\r\n                                : <small>Branch</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select branch'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={branchOptions}\r\n                                        onChange={onChangeBranch}\r\n                                    // defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setBranchShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {/* Name */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.name && errors.name.message ? (\r\n                                <small className=\"text-danger\">{errors.name && errors.name.message}</small>\r\n                            ) : <small>Name</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                defaultValue={user.name ? user.name : null}\r\n                                className={errors.name ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"Your name\"\r\n                                ref={register({\r\n                                    required: \"Name is required.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Minimun length 5 character.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Phone */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.phone && errors.phone.message ? (\r\n                                <small className=\"text-danger\">{errors.phone && errors.phone.message}</small>\r\n                            ) : <small>Phone number</small>\r\n                            }\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                defaultValue={user.phone ? user.phone : null}\r\n                                className={errors.phone ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                placeholder=\"( 01X-XXXX-XXXX )\"\r\n                                ref={register({\r\n                                    required: \"Phone number is required.\",\r\n                                    pattern: {\r\n                                        value: /^\\(?([0-9]{3})\\)?([0-9]{8})$/,\r\n                                        message: \"Number isn't valid.\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* E-mail */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>E-mail</small>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled\r\n                                defaultValue={user.email ? user.email : null}\r\n                                className=\"form-control shadow-none\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Gender */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.gender && errors.gender.message ? (\r\n                                <small className=\"text-danger\">{errors.gender && errors.gender.message}</small>\r\n                            ) : <small>Gender</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"gender\"\r\n                                className={errors.gender ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Gender is required.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Looking For */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.lookingFor && errors.lookingFor.message ? (\r\n                                <small className=\"text-danger\">{errors.lookingFor && errors.lookingFor.message}</small>\r\n                            ) : <small>Looking for</small>\r\n                            }\r\n\r\n                            <select\r\n                                name=\"lookingFor\"\r\n                                className={errors.lookingFor ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Select what you want.\"\r\n                                })}\r\n                            >\r\n                                <option value=\"groom\">Groom</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* DOB */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {errors.dob && errors.dob.message ? (\r\n                                <small className=\"text-danger\">{errors.dob && errors.dob.message}</small>\r\n                            ) : <small>Date of birth</small>\r\n                            }\r\n\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dob\"\r\n                                className={errors.dob ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\r\n                                ref={register({\r\n                                    required: \"Date of birth is required\"\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Religion */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"form-group mb-4\">\r\n                            {religion.error ?\r\n                                <small className=\"text-danger\">Religion is required.</small>\r\n                                : <small>Religion</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select religion'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={religionOptions}\r\n                                        onChange={onChangeReligion}\r\n                                    // defaultOptions={{ value: user.religion, label: user.religion }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setReligionShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Social order */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {socialOrder.error ?\r\n                                <small className=\"text-danger\">Social order is required.</small>\r\n                                : <small>Social order</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={socialOrderOptions}\r\n                                        onChange={onChangeSocialOrder}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setSocialOrderShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Birth Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {birthCountry.error ?\r\n                                <small className=\"text-danger\">Birth country is required.</small>\r\n                                : <small>Birth country</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select birth country'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeBirthCountry}\r\n                                        defaultOptions={{ value: user.birthCountry, label: user.birthCountry }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Living Country */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Living country</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Social order'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={countryOptions}\r\n                                        onChange={onChangeLivingCountry}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setCountryShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Mother tounge  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            {motherTongue.error ?\r\n                                <small className=\"text-danger\">Mother toungue is required.</small>\r\n                                : <small>Mother tounge</small>\r\n                            }\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        placeholder={'Select mother tounge'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeMotherTongue}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Spoken language  */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"form-group mb-4\">\r\n                            <small>Spoken language</small>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"flex-fill\">\r\n                                    <Select\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        placeholder={'Select spoken language'}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeSpokenLanguage}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"pl-2 pt-1\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        style={customStyles.smBtn}\r\n                                        className=\"btn shadow-none rounded-circle p-1\"\r\n                                        onClick={() => setLanguageShow(true)}\r\n                                    >\r\n                                        <Icon icon={ic_add} size={22} />\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Submit Button */}\r\n                <div className=\"text-right\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn shadow-none\"\r\n                        disabled={isUpdate}\r\n                    >\r\n                        {isUpdate ? <span>Updating...</span> : <span>Update</span>}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* Modals */}\r\n\r\n            {/* Branch create modal */}\r\n            {isBranchShow ?\r\n                <BranchCreateModal\r\n                    show={isBranchShow}\r\n                    newdata={createBranch}\r\n                    countries={countryOptions}\r\n                    isCreate={isBranchCreated}\r\n                    onHide={() => setBranchShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Religion create modal */}\r\n            {isReligionShow ?\r\n                <ReligionCreateModal\r\n                    show={isReligionShow}\r\n                    newdata={createReligion}\r\n                    isCreate={isCreateReligion}\r\n                    onHide={() => setReligionShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Social order create modal */}\r\n            {isSocialOrderShow ?\r\n                <SocialOrderCreateModal\r\n                    show={isSocialOrderShow}\r\n                    religions={religionOptions}\r\n                    newdata={createSocialOrder}\r\n                    isCreate={isCreateSocialOrder}\r\n                    onHide={() => setSocialOrderShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Country create modal */}\r\n            {isCountryShow ?\r\n                <CountryCreateModal\r\n                    show={isCountryShow}\r\n                    newdata={createCountry}\r\n                    isCreate={isCountryCreate}\r\n                    onHide={() => setCountryShow(false)}\r\n                />\r\n                : null}\r\n\r\n            {/* Language create modal  */}\r\n            {isLanguageShow ?\r\n                <LanguageCreateModal\r\n                    show={isLanguageShow}\r\n                    newdata={createLanguage}\r\n                    isCreate={isLanguageCreated}\r\n                    onHide={() => setLanguageShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrimaryInfo;\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: 42,\r\n        fontSize: 14,\r\n        color: '#000',\r\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\r\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\r\n        borderRadius: 0\r\n    }),\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ProfilePictureDescription.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\BasicAndLifestyle.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\ContactInformation.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Hobbi.js",["112","113","114"],"import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport { api } from '../../utils/api'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Icon from 'react-icons-kit'\r\nimport { ic_add } from 'react-icons-kit/md'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nimport HobbiCreateModal from '../modal/Hobbi'\r\n\r\nimport { removeItem } from '../../utils/helpers'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PersonalActivities = ({ email, activities }) => {\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [hobbies, setHobbies] = useState([])\r\n\r\n    // Input states\r\n    const [selectedHobbies, setSelectedHobbies] = useState([])\r\n    const [isEmpty, setEmpty] = useState(false)\r\n\r\n    // Hobbi create states\r\n    const [show, setShow] = useState(false)\r\n    const [created, setCreated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchHobbi()\r\n    }, [])\r\n\r\n    // Handle hobbie\r\n    // const handleHobbie = event => {\r\n    //     const newHobbi = event.target.value\r\n    // const exHobbie = selectedHobbies.find((hobbi) => hobbi === newHobbi)\r\n    // if (exHobbie) {\r\n    //     const newArr = selectedHobbies.filter(e => e !== newHobbi)\r\n    //     return setSelectedHobbies(newArr)\r\n    // }\r\n    // setSelectedHobbies([...selectedHobbies, newHobbi])\r\n    // }\r\n\r\n    // Fetch Hobbi\r\n    const fetchHobbi = async () => {\r\n        try {\r\n            const response = await axios.get(`${api}admin/activity/index`)\r\n            if (response.status === 200) {\r\n                setHobbies(response.data.activities.hobbies)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Hobbi\r\n    const createHobbi = async (data) => {\r\n        try {\r\n            setCreated(true)\r\n            const response = await axios.post(`${api}admin/activity/store/hobbi`, data)\r\n            if (response.status === 201) {\r\n                fetchHobbi()\r\n                setCreated(false)\r\n                setShow(false)\r\n                toast.success(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                setCreated(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Add hobbi\r\n    const addHobbi = async () => {\r\n        try {\r\n            console.log(selectedHobbies)\r\n            // console.log(activities.hobbies)\r\n            // setSelectedHobbies([...selectedHobbies, activities.hobbies])\r\n            // console.log(selectedHobbies)\r\n\r\n            // if (!selectedHobbies.length) return setEmpty(true)\r\n            // const data = { email: email, hobbies: selectedHobbies }\r\n\r\n            // setLoading(true)\r\n            // const response = await axios.put(`${api}admin/user/profile/activity?field=hobbies`, data)\r\n            // if (response.status === 201) {\r\n            //     setLoading(false)\r\n            //     toast.success(response.data.message)\r\n            // }\r\n\r\n        } catch (error) {\r\n            if (error) {\r\n                setLoading(false)\r\n                toast.warn(error.response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Active sellected options\r\n    const checkedHobbi = hobbi => {\r\n        if (activities) {\r\n            const activity = activities.hobbies.find(data => data === hobbi)\r\n            if (activity)\r\n                return activity\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggleCheckbox = event => {\r\n        const item = event.target.value\r\n\r\n        // setSelectedHobbies(activities.hobbies)\r\n        console.log(item);\r\n\r\n        // const isAvailable = selectedHobbies.find(oldItem => oldItem === item)\r\n        // if (isAvailable) {\r\n        //     const freshItems = removeItem(selectedHobbies, item)\r\n        //     setSelectedHobbies(freshItems)\r\n        // } else {\r\n        //     setSelectedHobbies([...selectedHobbies, item])\r\n        // }\r\n\r\n\r\n      \r\n\r\n\r\n        // const exHobbie = selectedHobbies.find((hobbi) => hobbi === item)\r\n        // if (exHobbie) {\r\n        //     const index = selectedHobbies.indexOf(item)\r\n        //     if (index > -1) { selectedHobbies.splice(index, 1) }\r\n        // }\r\n        // setSelectedHobbies([...selectedHobbies, item])\r\n\r\n        // console.log(selectedHobbies);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            {/* Section header */}\r\n            <div className=\"section-header d-flex mb-3\">\r\n                <div className=\"pr-3\">\r\n                    <button\r\n                        type=\"button\"\r\n                        style={customStyles.smBtn}\r\n                        className=\"btn shadow-none rounded-circle p-1\"\r\n                        onClick={() => setShow(true)}\r\n                    >\r\n                        <Icon icon={ic_add} size={22} />\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <p className=\"section-title\">\r\n                        {isEmpty ? <span className=\"text-danger\">Please select hobbies</span> : <span>Hobbies</span>}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Section body */}\r\n            <div className=\"section-body\">\r\n                <div className=\"row\">\r\n                    {hobbies && hobbies.map((hobbie, i) =>\r\n                        <div className=\"col-6 col-sm-4 col-md-3\" key={i}>\r\n                            <Form.Group controlId={i}>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label={hobbie}\r\n                                    value={hobbie}\r\n                                    onChange={toggleCheckbox}\r\n                                    defaultChecked={checkedHobbi(hobbie)}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    )}\r\n\r\n                    {hobbies && hobbies.length ?\r\n                        <div className=\"col-12 text-right\">\r\n                            <button type=\"button\" className=\"btn shadow-none\" onClick={addHobbi} disabled={isLoading}>\r\n                                {isLoading ? <span>Adding...</span> : <span>Add Hobbies</span>}\r\n                            </button>\r\n                        </div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modals */}\r\n            {/* Hobbi Create */}\r\n            {show ?\r\n                <HobbiCreateModal\r\n                    show={show}\r\n                    newdata={createHobbi}\r\n                    isCreate={created}\r\n                    onHide={() => setShow(false)}\r\n                />\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalActivities;\r\n\r\nconst customStyles = {\r\n    smBtn: {\r\n        width: 33,\r\n        height: 34,\r\n    }\r\n}","C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\Interests.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\FavouriteMusic.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\utils\\helpers.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Branch.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Religion.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\SocialOrder.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Country.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Language.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Hobbi.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Interest.js",[],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\modal\\Music.js",[],["115","116"],"C:\\CB\\COLOURBANGLA\\tmm_user_reg_app\\src\\components\\forms\\PartnerPreference.js",["117","118","119","120","121"],"import React, { useEffect, useState } from 'react'\r\nimport './style.scss'\r\nimport 'antd/dist/antd.css'\r\nimport axios from 'axios'\r\nimport { Slider } from 'antd'\r\nimport Select from 'react-select'\r\nimport { api } from '../../utils/api'\r\nimport { useForm } from 'react-hook-form'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\ntoast.configure({ autoClose: 2000 })\r\nconst PartnerPreference = ({ email }) => {\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    // Input States\r\n    const [ageRange, setAgeRange] = useState({ startFrom: 20, endTo: 50 })\r\n    const [heightRange, setHeightRange] = useState({ startFrom: 4, endTo: 6 })\r\n    const [materialStatus, setMaterialStatus] = useState([])\r\n    const [religion, setReligion] = useState([])\r\n    const [socialOrder, setSocialOrder] = useState([])\r\n    const [motherTounge, setMotherTounge] = useState(null)\r\n    const [spokenLanguages, setSpokenLanguages] = useState([])\r\n\r\n    // Material Options\r\n    const materialStatusOptions = [\r\n        { label: 'Never married', value: 'never_married' },\r\n        { label: 'Divorced', value: 'divorced' },\r\n        { label: 'Annulled', value: 'annulled' },\r\n        { label: 'Widowed', value: 'widowed' }\r\n    ]\r\n\r\n    // Religion options\r\n    const [religionOptions, setReligionOptions] = useState([])\r\n\r\n    // Social order options\r\n    const [socialOrderOptions, setSocialOrderOptions] = useState([])\r\n\r\n    // Language options\r\n    const [languageOptions, setLanguageOptions] = useState([])\r\n\r\n    // Diet options\r\n    const dietOptions = [\r\n        { label: 'Open to all', value: 'open_to_all' },\r\n        { label: 'veg', value: 'veg' },\r\n        { label: 'non-veg', value: 'non-veg' },\r\n        { label: 'vegan', value: 'vegan' }\r\n    ]\r\n\r\n    // Blood Group options\r\n    const bloodGroupOptions = [\r\n        { label: 'A(+ev)', value: 'A(+ev)' },\r\n        { label: 'A(-ev)', value: 'A(-ev)' },\r\n        { label: 'B(+ev)', value: 'B(+ev)' },\r\n        { label: 'B(-ev)', value: 'B(-ev)' },\r\n        { label: 'AB(+ev)', value: 'AB(+ev)' },\r\n        { label: 'AB(-ev)', value: 'AB(-ev)' },\r\n        { label: 'O(+ev)', value: 'O(+ev)' },\r\n        { label: 'O(-ev)', value: 'O(-ev)' },\r\n    ]\r\n\r\n    // Health information options\r\n    const healthInfOptions = [\r\n        { label: 'No Health Problem', value: 'No Health Problem' },\r\n        { label: 'HIV positive', value: 'HIV positive' },\r\n        { label: 'Diabetes', value: 'Diabetes' },\r\n        { label: 'Low BP', value: 'Low BP' },\r\n        { label: 'Hight BP', value: 'Hight BP' },\r\n        { label: 'Heart Aliments)', value: 'ABHeart Aliments' },\r\n        { label: 'Other', value: 'Other' },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // Get Religion\r\n        const getPartnerPreferenceInfo = async () => {\r\n            try {\r\n                const response = await axios.get(`${api}admin/user/partner-preference/info`)\r\n                setReligionOptions(response.data.religions.map(religion => ({ label: religion, value: religion })))\r\n                setSocialOrderOptions(response.data.socialOrders.map(order => ({ label: order, value: order })))\r\n                setLanguageOptions(response.data.languages.map(language => ({ label: language, value: language })))\r\n                console.log(response.data)\r\n\r\n            } catch (error) {\r\n                if (error) {\r\n                    toast.warn(error.response.data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        getPartnerPreferenceInfo()\r\n    }, [])\r\n\r\n    // After age change\r\n    const onAfterAgeChange = value => setAgeRange({ startFrom: value[0], endTo: value[1] })\r\n\r\n    // After height change\r\n    const onAfterHeightChange = value => setHeightRange({ startFrom: value[0], endTo: value[1] })\r\n\r\n    // On change material status handle\r\n    const onChangeMaterialStatus = event => setMaterialStatus({ value: event })\r\n\r\n    // On change religion handle\r\n    const onChangeReligion = event => setReligion({ value: event })\r\n\r\n    // On change social order\r\n    const onChangeSocialOrder = event => setSocialOrder({ value: event })\r\n\r\n    // On change mother tounge\r\n    const onChangeMotherTounge = event => setMotherTounge(event.value)\r\n\r\n    // On change spoken language\r\n    const onChangeSpokenLanguages = event => setSpokenLanguages({ value: event })\r\n\r\n\r\n\r\n    // Submit data to API\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            setLoading(true)\r\n            const newData = {\r\n                ...data,\r\n                ageRange,\r\n                heightRange,\r\n                materialStatus: materialStatus.value ? materialStatus.value.map(data => data.value) : null,\r\n                religion: religion.value ? religion.value.map(data => data.value) : null,\r\n                socialOrder: socialOrder.value ? socialOrder.value.map(data => data.value) : null,\r\n                motherTounge,\r\n                spokenLanguages: spokenLanguages.value ? spokenLanguages.value.map(data => data.value) : null,\r\n            }\r\n\r\n            console.log(newData)\r\n            setTimeout(() => setLoading(false), 1000)\r\n        } catch (error) {\r\n            if (error) console.log(error.response)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"partner-preference\">\r\n            <div className=\"card border-0 my-lg-4\">\r\n                <div className=\"card-header bg-white\">\r\n                    <h6 className=\"mb-0\">Partner preference</h6>\r\n                </div>\r\n                <div className=\"card-body p-4\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"row\">\r\n\r\n                            {/* Age Range */}\r\n                            <div className=\"col-12 col-lg-6\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Age range ({ageRange.startFrom}-{ageRange.endTo})</p>\r\n                                    <Slider\r\n                                        range\r\n                                        defaultValue={[20, 50]}\r\n                                        onAfterChange={onAfterAgeChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Height Range */}\r\n                            <div className=\"col-12 col-lg-6\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Height range ({heightRange.startFrom}-{heightRange.endTo})</p>\r\n                                    <Slider\r\n                                        range\r\n                                        min={1}\r\n                                        max={10}\r\n                                        defaultValue={[4, 6]}\r\n                                        onAfterChange={onAfterHeightChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Material status */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Material status</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={materialStatusOptions}\r\n                                        onChange={onChangeMaterialStatus}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Religion */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Religion</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={religionOptions}\r\n                                        onChange={onChangeReligion}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Social order */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Social order</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={socialOrderOptions}\r\n                                        onChange={onChangeSocialOrder}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Mother tounge */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Mother tounge</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeMotherTounge}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Spoken language */}\r\n                            <div className=\"col-12 col-lg-4\">\r\n                                <div className=\"form-group mb-4\">\r\n                                    <p>Spoken language</p>\r\n\r\n                                    <Select\r\n                                        classNamePrefix=\"custom-select\"\r\n                                        isMulti\r\n                                        styles={customStyles}\r\n                                        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                                        options={languageOptions}\r\n                                        onChange={onChangeSpokenLanguages}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            {/* Work with location */}\r\n\r\n\r\n\r\n                            {/* Submit Button */}\r\n                            <div className=\"col-12 text-right\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn shadow-none\"\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? <span>Adding...</span> : <span>Submit</span>}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PartnerPreference;\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: 42,\r\n        fontSize: 14,\r\n        color: '#000',\r\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\r\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\r\n        borderRadius: 0\r\n    })\r\n}",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":29,"column":8,"nodeType":"128","endLine":29,"endColumn":15,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":26,"column":6,"nodeType":"128","endLine":26,"endColumn":12,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":21,"column":22,"nodeType":"134","messageId":"135","endLine":21,"endColumn":31},{"ruleId":"132","severity":1,"message":"136","line":22,"column":12,"nodeType":"134","messageId":"135","endLine":22,"endColumn":21},{"ruleId":"132","severity":1,"message":"137","line":22,"column":23,"nodeType":"134","messageId":"135","endLine":22,"endColumn":33},{"ruleId":"132","severity":1,"message":"138","line":13,"column":10,"nodeType":"134","messageId":"135","endLine":13,"endColumn":20},{"ruleId":"132","severity":1,"message":"139","line":21,"column":29,"nodeType":"134","messageId":"135","endLine":21,"endColumn":47},{"ruleId":"132","severity":1,"message":"140","line":22,"column":21,"nodeType":"134","messageId":"135","endLine":22,"endColumn":29},{"ruleId":"122","replacedBy":"141"},{"ruleId":"124","replacedBy":"142"},{"ruleId":"132","severity":1,"message":"143","line":14,"column":13,"nodeType":"134","messageId":"135","endLine":14,"endColumn":21},{"ruleId":"132","severity":1,"message":"144","line":14,"column":37,"nodeType":"134","messageId":"135","endLine":14,"endColumn":43},{"ruleId":"132","severity":1,"message":"145","line":44,"column":11,"nodeType":"134","messageId":"135","endLine":44,"endColumn":22},{"ruleId":"132","severity":1,"message":"146","line":52,"column":11,"nodeType":"134","messageId":"135","endLine":52,"endColumn":28},{"ruleId":"132","severity":1,"message":"147","line":64,"column":11,"nodeType":"134","messageId":"135","endLine":64,"endColumn":27},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["151"],"no-unused-vars","'setUpdate' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'removeItem' is defined but never used.","'setSelectedHobbies' is assigned a value but never used.","'setEmpty' is assigned a value but never used.",["148"],["149"],"'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'dietOptions' is assigned a value but never used.","'bloodGroupOptions' is assigned a value but never used.","'healthInfOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [email, fetchUser]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchUsers, page]",{"range":"158","text":"159"},[1150,1157],"[email, fetchUser]",[935,941],"[fetchUsers, page]"]
>>>>>>> c2dfecc42a4a567a486d4707961b46a9b9896eba
